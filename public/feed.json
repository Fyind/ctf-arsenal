{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "https://cr4zyp1x3l.netlify.app",
    "items": [
        {
            "id": "https://cr4zyp1x3l.netlify.app/hello-world/",
            "url": "https://cr4zyp1x3l.netlify.app/hello-world/",
            "title": "Hello World",
            "date_published": "2025-02-04T13:15:41.580Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "https://cr4zyp1x3l.netlify.app/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/",
            "url": "https://cr4zyp1x3l.netlify.app/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/",
            "title": "逆向工程",
            "date_published": "2025-02-03T22:17:06.000Z",
            "content_html": "<h1 id=\"ida的使用\"><a class=\"anchor\" href=\"#ida的使用\">#</a> IDA 的使用</h1>\n<p>根据程序的位数选择对应位数的 IDA 打开程序。（附件是 64 位的<br>\n一般没有特殊需求，我们直接默认点击 OK 就好了</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929110409063.png\" alt=\"image-20240929110409063\"></p>\n<p>在 functions windows 里面找到 main</p>\n<p>然后在右边的窗口里按 F5 就可以跳出反汇编窗口</p>\n<blockquote>\n<p>buuctf-easyre</p>\n</blockquote>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929110715802.png\" alt=\"image-20240929110715802\"></p>\n<p><a href=\"https://blog.csdn.net/weixin_45723661/category_11348511.html\">https://blog.csdn.net/weixin_45723661/category_11348511.html</a></p>\n<h3 id=\"ida-功能界面介绍\"><a class=\"anchor\" href=\"#ida-功能界面介绍\">#</a> IDA 功能界面介绍</h3>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929112232598.png\" alt=\"image-20240929112232598\"></p>\n<p>- 蓝色 :  <code>.text section</code> <br>\n- 深蓝：用户写的函数编译后的代码区<br>\n - 浅蓝：编译器自己添加的函数，像启动函数，异常函数等等 ..<br>\n- 粉红色 :  <code>.idata section</code> <br>\n 有关输入表的一些数据信息<br>\n - 军绿色：  <code>.rdata section</code> <br>\n 纯数据，只读<br>\n - 灰色：为了段对齐而留下的空隙<br>\n - 黑色：禁区</p>\n<h4 id=\"汇编代码界面注释\"><a class=\"anchor\" href=\"#汇编代码界面注释\">#</a> 汇编代码界面注释</h4>\n<p><code>shift + ;</code></p>\n<p>伪代码注释</p>\n<p><code>/</code></p>\n<ul>\n<li>G 跳转</li>\n<li>N 改名</li>\n</ul>\n<h4 id=\"imports\"><a class=\"anchor\" href=\"#imports\">#</a> imports</h4>\n<p>程序从动态链接库中导入的要使用的函数</p>\n<h4 id=\"exports\"><a class=\"anchor\" href=\"#exports\">#</a> exports</h4>\n<p>程序导出给其它程序使用的函数</p>\n<h3 id=\"字符串窗口\"><a class=\"anchor\" href=\"#字符串窗口\">#</a> 字符串窗口</h3>\n<p><code>shift + F12</code></p>\n<p>双击字符串找到位置</p>\n<p>在 DATA XREF 里面可以找到谁访问了这个地址</p>\n<blockquote>\n<p>buuctf-reverse_1</p>\n</blockquote>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929113449816.png\" alt=\"image-20240929113449816\"></p>\n<p>在数字上按 R 可以转换成字符</p>\n<h4 id=\"这个是带换行的\"><a class=\"anchor\" href=\"#这个是带换行的\">#</a> 这个是带换行的</h4>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240930190521829.png\" alt=\"image-20240930190521829\"></p>\n<ul>\n<li>按 A 转换成字符串</li>\n<li>D 转换成数据</li>\n<li>C 转换成汇编代码</li>\n<li>U 转换成原始字节</li>\n</ul>\n<h3 id=\"export-data\"><a class=\"anchor\" href=\"#export-data\">#</a> export data</h3>\n<p>shift + E 可以导出</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240930191508047.png\" alt=\"image-20240930191508047\"></p>\n<p>TODO:</p>\n<p>总结 SimpleRev</p>\n<h3 id=\"调整基地址\"><a class=\"anchor\" href=\"#调整基地址\">#</a> 调整基地址</h3>\n<p>Edit 里面 Segment 里面 Rebase Program, 然后输入基地址就可以和 x64dbg 地址对齐</p>\n<h4 id=\"跳转地址\"><a class=\"anchor\" href=\"#跳转地址\">#</a> 跳转地址</h4>\n<p>按 G 跳转</p>\n<h2 id=\"linux-调试\"><a class=\"anchor\" href=\"#linux-调试\">#</a> Linux 调试</h2>\n<p>使用 windows 下面的 ida pro 调试 Linux 下面的程序需要使用 ida 的远程调试功能。<br>\n首先将 ida 文件夹中的 dbgsrv/linux_serverx64 文件放入需要调试程序的同级文件夹中。再使用 chmod a+x linux_serverx64 改变该文件的权限。</p>\n<p>把要调试的文件也要 + x 运行权限</p>\n<p>然后连接</p>\n<p>再 application 和 inputfile 里填入要调试的<strong>绝对路径</strong> ，host 里面填 ip 地址，密码不用填，然后就可以了</p>\n<blockquote>\n<p>buuctf-level3</p>\n</blockquote>\n<p>下断点进调试看 base64 数组被改变的值</p>\n<h3 id=\"rsa\"><a class=\"anchor\" href=\"#rsa\">#</a> RSA</h3>\n<blockquote>\n<p>buuctf - signin</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">__gmpz_init_set_str</span><span class=\"token punctuation\">(</span>v7<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">__gmpz_init_set_str</span><span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">,</span> v9<span class=\"token punctuation\">,</span> <span class=\"token number\">16LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">__gmpz_init_set_str</span><span class=\"token punctuation\">(</span>v4<span class=\"token punctuation\">,</span> <span class=\"token string\">\"103461035900816914121390101299049044413950405173712170434161686539878160984549\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">__gmpz_init_set_str</span><span class=\"token punctuation\">(</span>v5<span class=\"token punctuation\">,</span> <span class=\"token string\">\"65537\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>看到这些整数可能是 RSA  <code>E=65537, N = 1034....</code></p>\n<p><code>__gmpz_init_set_str</code>  这是一个 GNU 高精度算法库</p>\n<p>这三个参数分别是多精度整数变量，字符串，进制</p>\n<p><code>__gmpz_powm(v6, v6, v5, v4) </code> 这个的意思其实就是 计算 v6 的 v5 次方并对 v4 取模，结果写入 v6。</p>\n<p>10346103590081691412139010129904904441395040517371217043416168653</p>\n<p><a href=\"http://www.factordb.com/index.php\">http://www.factordb.com/index.php</a> 这个可以查质数分解</p>\n<p>整数到 bytes</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>unhexlify<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># si = int.from_bytes(s) # byte to int</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># rsa.transform.int2bytes(c) # alternative</span></pre></td></tr></table></figure><p>题解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> inverse</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> unhexlify</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">103461035900816914121390101299049044413950405173712170434161686539878160984549</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">282164587459512124844245113950593348271</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">366669102002966856876605669837014229419</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">.</span>lcm<span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>M <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rsa<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>int2bytes<span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>decrypted <span class=\"token operator\">=</span> rsa<span class=\"token punctuation\">.</span>PrivateKey<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>blinded_decrypt<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rsa<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>int2bytes<span class=\"token punctuation\">(</span>decrypted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>从 key 文件里面读取</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> RSA</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pub.key\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pkdata <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pk <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>import_key<span class=\"token punctuation\">(</span>pkdata<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> pk<span class=\"token punctuation\">.</span>n</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> pk<span class=\"token punctuation\">.</span>e</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"壳\"><a class=\"anchor\" href=\"#壳\">#</a> 壳</h2>\n<p>用 exeinfope 可以看有没有壳， 或者用 file 指令</p>\n<h3 id=\"upx\"><a class=\"anchor\" href=\"#upx\">#</a> UPX</h3>\n<blockquote>\n<p>buuctf - 新年快乐</p>\n</blockquote>\n<p>可以看出来是 UPX 的壳</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929125830292.png\" alt=\"image-20240929125830292\"></p>\n<p>file 指令会有</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929130135608.png\" alt=\"image-20240929130135608\"></p>\n<p>解壳</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upx <span class=\"token parameter variable\">-d</span> xx.exe</pre></td></tr></table></figure><h1 id=\"安卓java\"><a class=\"anchor\" href=\"#安卓java\">#</a> 安卓 / JAVA</h1>\n<p>jdk 安装<a href=\"https://www.oracle.com/java/technologies/downloads/#jdk22-windows\"> https://www.oracle.com/java/technologies/downloads/#jdk22-windows</a></p>\n<h3 id=\"jadx\"><a class=\"anchor\" href=\"#jadx\">#</a> jadx</h3>\n<p>安装<a href=\"https://github.com/skylot/jadx/releases/tag/v1.5.0\"> https://github.com/skylot/jadx/releases/tag/v1.5.0</a></p>\n<p>可以打开文件，把 APK 传进去，在左边可以看到源代码</p>\n<p>打开 windows gui 的那个</p>\n<h1 id=\"ios逆向\"><a class=\"anchor\" href=\"#ios逆向\">#</a> IOS 逆向</h1>\n<p><a href=\"https://www.i4.cn/\">https://www.i4.cn/</a></p>\n<p>装爱思助手</p>\n<p>越狱，要制作启动盘</p>\n<p><a href=\"https://www.bilibili.com/video/BV1or421G7vo/?spm_id_from=333.788.videopod.sections&amp;vd_source=2c1227d0a7d29725db75d3fc52e6089b\">https://www.bilibili.com/video/BV1or421G7vo/?spm_id_from=333.788.videopod.sections&amp;vd_source=2c1227d0a7d29725db75d3fc52e6089b</a></p>\n<h3 id=\"frida\"><a class=\"anchor\" href=\"#frida\">#</a> Frida</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> frida-tools</pre></td></tr></table></figure><h3 id=\"ghigra\"><a class=\"anchor\" href=\"#ghigra\">#</a> Ghigra</h3>\n<h4 id=\"x64dbg\"><a class=\"anchor\" href=\"#x64dbg\">#</a> x64dbg</h4>\n<p>gitbub 上有</p>\n<h1 id=\"unity\"><a class=\"anchor\" href=\"#unity\">#</a> Unity</h1>\n<blockquote>\n<p>BUUCTF [BJDCTF2020]BJD hamburger competition</p>\n</blockquote>\n<p>第一次接触 Unity 的逆向题<br>\n这种关键代码一般都在  <code>assembly-csharp.dll</code>  里面，加载到 dnspy 里面，左边点开可以看到源代码</p>\n<h1 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> Python</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> uncompyle6</pre></td></tr></table></figure><p>用这个命令</p>\n<p>用 online 的比较好<a href=\"https://www.lddgo.net/en/string/pyc-compile-decompile\"> https://www.lddgo.net/en/string/pyc-compile-decompile</a></p>\n<h1 id=\"go\"><a class=\"anchor\" href=\"#go\">#</a> GO</h1>\n<p><a href=\"https://github.com/sibears/IDAGolangHelper\">https://github.com/sibears/IDAGolangHelper</a></p>\n<p>可以装这个插件</p>\n<h1 id=\"代码分析\"><a class=\"anchor\" href=\"#代码分析\">#</a> 代码分析</h1>\n<blockquote>\n<p>buuctf lucky guy</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>j <span class=\"token operator\">>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>_BYTE<span class=\"token punctuation\">)</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span>j <span class=\"token operator\">>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p>等价于</p>\n<p><code>j % 2 == 1</code></p>\n<h3 id=\"复用代码解密\"><a class=\"anchor\" href=\"#复用代码解密\">#</a> 复用代码解密</h3>\n<blockquote>\n<p>buuctf 刮开有奖</p>\n</blockquote>\n<p>这里面的函数 IDA 会判断错误，需要改正，类型改了代码也要记得改</p>\n<h4 id=\"答案在其他函数里\"><a class=\"anchor\" href=\"#答案在其他函数里\">#</a> 答案在其他函数里</h4>\n<blockquote>\n<p>buuctf [2019 红帽杯] easyRE</p>\n</blockquote>\n<p>往 main 的下面找找</p>\n<h2 id=\"花指令\"><a class=\"anchor\" href=\"#花指令\">#</a> 花指令</h2>\n<p>有时候 IDA 反编译不了，这个时候要改指令，通常是 jnz 指令</p>\n<blockquote>\n<p>buuctf Maze</p>\n</blockquote>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/31f160e7596c17139883c26175af9d24.webp\" alt=\"img\"></p>\n<p>如何 nop:</p>\n<ol>\n<li><code>Edit/Patch program/Change byte</code>  将要修改的 byte 改成 90，修改完后 <code>Edit/Patch program/Apply patches to input file</code>  保存修改后的文件，</li>\n<li>或者 <code>Edit/Patch program/Assemble</code>  直接输入 <code>nop</code> ，然后同样要保存</li>\n</ol>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/a3a1c2a23cadd179ee2a5d6c81e3adb2.webp\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"把报错的函数编译一下\"><a class=\"anchor\" href=\"#把报错的函数编译一下\">#</a> 把报错的函数编译一下</h4>\n<blockquote>\n<p>[MRCTF2020]Xor</p>\n</blockquote>\n<p>把报错的函数点进去反编译一下，然后再回来编译就可以了</p>\n<h3 id=\"数据类型判断\"><a class=\"anchor\" href=\"#数据类型判断\">#</a> 数据类型判断</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>__int64 v6<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"input: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    a2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v6 <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">__isoc99_scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个 v6 应该是 4byte, 因为  <code>(char *)v6 + 4 * i)</code>  是 4 字节</p>\n<h2 id=\"加密算法\"><a class=\"anchor\" href=\"#加密算法\">#</a> 加密算法</h2>\n<h3 id=\"tea加密\"><a class=\"anchor\" href=\"#tea加密\">#</a> TEA 加密</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>v3 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v4 <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>v5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    v5 <span class=\"token operator\">+=</span> <span class=\"token number\">1166789954</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    v3 <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">+</span> v5 <span class=\"token operator\">+</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>a2<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">>></span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    v4 <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v5 <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">*</span>a1 <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>result <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>解密</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xDF48EF7E</span><span class=\"token punctuation\">,</span><span class=\"token number\">550153460</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3774025685</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1548802262</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2652626477</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x84F30420</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> decoded<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> v5 <span class=\"token operator\">=</span> <span class=\"token number\">0x458BCD42</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> v3 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v4 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">63</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        v4 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">+</span> v5 <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v3 <span class=\"token operator\">>></span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        v3 <span class=\"token operator\">-=</span> <span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">+</span> v5 <span class=\"token operator\">+</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v4 <span class=\"token operator\">>></span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        v5 <span class=\"token operator\">-=</span> <span class=\"token number\">0x458BCD42</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    decoded<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    decoded<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>要把 v3，v4 的类型写对，否则计算结果不对</p>\n<h3 id=\"解方程z3\"><a class=\"anchor\" href=\"#解方程z3\">#</a> 解方程 z3</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> z3-solver</pre></td></tr></table></figure><blockquote>\n<p>buuctf [ACTF 新生赛 2020] Universe_final_answer</p>\n</blockquote>\n<h3 id=\"md5\"><a class=\"anchor\" href=\"#md5\">#</a> MD5</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Hash<span class=\"token punctuation\">.</span>MD5 <span class=\"token keyword\">import</span> MD5Hash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> hexlify</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>token <span class=\"token operator\">=</span> <span class=\"token string\">\"1001\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hexlify<span class=\"token punctuation\">(</span>MD5Hash<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"init-函数修改\"><a class=\"anchor\" href=\"#init-函数修改\">#</a> init 函数修改</h2>\n<p><a href=\"https://www.cnblogs.com/NozoMizo/articles/17737745.html\">https://www.cnblogs.com/NozoMizo/articles/17737745.html</a></p>\n<h1 id=\"windows-api\"><a class=\"anchor\" href=\"#windows-api\">#</a> Windows API</h1>\n<h3 id=\"findresourcea\"><a class=\"anchor\" href=\"#findresourcea\">#</a> FindResourceA</h3>\n<blockquote>\n<p>buuctf CrackRTF</p>\n</blockquote>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hResInfo <span class=\"token operator\">=</span> <span class=\"token function\">FindResourceA</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCSTR<span class=\"token punctuation\">)</span><span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AAA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hResInfo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>FindResourceA</code>  函数用于查找一个指定的资源。</p>\n<ul>\n<li>第一个参数是模块句柄，这里为  <code>0</code> ，表示当前模块。</li>\n<li>第二个参数  <code>(LPCSTR)0x65</code>  是资源的标识符（ID），这里使用的是资源 ID  <code>0x65</code> 。</li>\n<li>第三个参数  <code>&quot;AAA&quot;</code>  是资源的类型名称。</li>\n</ul>\n<p>如果  <code>FindResourceA</code>  返回  <code>NULL</code> ，则表示资源没有找到，函数立即返回  <code>0</code> 。</p>\n<p><strong>用 Resource Hacker 可以提取 exe 的资源</strong></p>\n<p><code>SizeofResource</code>  获取指定资源的大小，结果赋值给  <code>nNumberOfBytesToWrite</code> ，表示将要写入的字节数</p>\n<h3 id=\"loadresource\"><a class=\"anchor\" href=\"#loadresource\">#</a> LoadResource</h3>\n<p><code>LoadResource</code>  函数将资源加载到内存中，返回资源的句柄  <code>hResData</code> 。</p>\n<p>如果加载失败，返回  <code>NULL</code> ，函数返回  <code>0</code> 。</p>\n<h4 id=\"lockresource\"><a class=\"anchor\" href=\"#lockresource\">#</a> LockResource</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>lpBuffer <span class=\"token operator\">=</span> <span class=\"token function\">LockResource</span><span class=\"token punctuation\">(</span>hResData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>LockResource</code>  锁定资源并返回一个指向资源数据的指针  <code>lpBuffer</code> 。通过这个指针可以访问资源内容</p>\n<h3 id=\"createfile\"><a class=\"anchor\" href=\"#createfile\">#</a> CreateFile</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hFile <span class=\"token operator\">=</span> <span class=\"token function\">CreateFileA</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dbapp.rtf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10000000u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hFile <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>CreateFileA</code>  用于创建或打开文件，这里试图创建一个名为  <code>&quot;dbapp.rtf&quot;</code>  的文件。</p>\n<ul>\n<li><code>0x10000000u</code> ： <code>GENERIC_WRITE</code> ，表示文件以写入模式打开。</li>\n<li><code>0</code>  和  <code>0</code> ：表示不使用文件共享和默认安全属性。</li>\n<li><code>2u</code> ： <code>CREATE_ALWAYS</code> ，表示总是创建文件，即使文件已经存在也会覆盖。</li>\n<li><code>0x80u</code> ： <code>FILE_ATTRIBUTE_NORMAL</code> ，表示文件的普通属性。</li>\n</ul>\n<p>如果文件创建失败，返回  <code>(HANDLE)-1</code> ，函数返回  <code>0</code> 。</p>\n<h3 id=\"writefile\"><a class=\"anchor\" href=\"#writefile\">#</a> WriteFile</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">WriteFile</span><span class=\"token punctuation\">(</span>hFile<span class=\"token punctuation\">,</span> lpBuffer<span class=\"token punctuation\">,</span> nNumberOfBytesToWrite<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>NumberOfBytesWritten<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>WriteFile</code>  将  <code>lpBuffer</code>  中的数据写入到文件  <code>hFile</code> ，写入的字节数为  <code>nNumberOfBytesToWrite</code> 。</p>\n<p><code>&amp;NumberOfBytesWritten</code>  用于接收实际写入的字节数。</p>\n<p>如果  <code>WriteFile</code>  失败，函数返回  <code>0</code> 。</p>\n<h2 id=\"多线程\"><a class=\"anchor\" href=\"#多线程\">#</a> 多线程</h2>\n<blockquote>\n<p>buuctf Youngter-drive</p>\n<p><code>counter = 29</code></p>\n<p>最终加密  <code>TOiZiZtOrYaToUwPnToBsOaOapsyS</code></p>\n<p>线程 1：若 counter&gt;-1 每次调用对 counter 位置加密，并且每次 - 1</p>\n<p>线程 2：若 counter&gt;-1 每次 -1</p>\n<p>所以加密基数或者偶数部分</p>\n</blockquote>\n<p>CreateMutexW: 作用是找出当前系统是否已经存在指定进程的实例.</p>\n<p>CreateThread:CreateThread 是一种微软在 Windows API 中提供了建立新的线程的函数，该<a href=\"https://baike.baidu.com/item/%E5%87%BD%E6%95%B0/301912?fromModule=lemma_inlink\">函数</a>在<a href=\"https://baike.baidu.com/item/%E4%B8%BB%E7%BA%BF%E7%A8%8B/9600138?fromModule=lemma_inlink\">主线程</a>的基础上创建一个新线程。<a href=\"https://baike.baidu.com/item/%E7%BA%BF%E7%A8%8B/103101?fromModule=lemma_inlink\">线程</a>终止运行后，线程对象仍然在系统中，必须通过 CloseHandle 函数来关闭该线程对象。</p>\n<p>CloseHandle: 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。在 CreateThread 成功之后会返回一个 hThread 的 handle，且内核对象的计数加 1，CloseHandle 之后，引用计数减 1，当变为 0 时，系统删除内核对象。</p>\n<p>WaitForSingleObject:WaitForSingleObject 函数用来检测 hHandle 事件的信号状态，在某一线程中调用该函数时，线程暂时挂起，如果在挂起的 dwMilliseconds 毫秒内，线程所等待的对象变为有信号状态，则该函数立即返回；如果时间已经到达 dwMilliseconds 毫秒，但 hHandle 所指向的对象还没有变成有信号状态，函数照样返回。</p>\n<p>在这里就相当于，第一个线程调用该函数，然后这里的 WaitForSingleObject 函数用来检测之前线程的信号状态，暂时挂起</p>\n<p>多线程例子：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>HANDLE hMutex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> last <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>DWORD WINAPI <span class=\"token function\">thread01</span><span class=\"token punctuation\">(</span>LPVOID lvParameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>last <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tarr<span class=\"token punctuation\">[</span>last<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tlast<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"thread 1 work on \"</span> <span class=\"token operator\">&lt;&lt;</span> last <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token function\">ReleaseMutex</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>DWORD WINAPI <span class=\"token function\">thread02</span><span class=\"token punctuation\">(</span>LPVOID lvParameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>last <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\tarr<span class=\"token punctuation\">[</span>last<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tlast<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"thread 2 work on \"</span> <span class=\"token operator\">&lt;&lt;</span> last <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token function\">ReleaseMutex</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\thMutex <span class=\"token operator\">=</span> <span class=\"token function\">CreateMutexA</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPCSTR<span class=\"token punctuation\">)</span><span class=\"token string\">\"Test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hMutex <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tHANDLE hTread1 <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> thread01<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hTread1 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tHANDLE hTread2 <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> thread02<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hTread2 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hTread1<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hTread2<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hTread1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hTread2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>hMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这题里面</p>\n<h1 id=\"游戏逆向\"><a class=\"anchor\" href=\"#游戏逆向\">#</a> 游戏逆向</h1>\n<h3 id=\"任务管理器找进程\"><a class=\"anchor\" href=\"#任务管理器找进程\">#</a> 任务管理器找进程</h3>\n<p>打开任务管理器</p>\n<p>&lt;img src=&quot;逆向工程 /image-20240811072446821.png&quot; alt=&quot;image-20240811072446821&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>然后右键，转到详细信息就有了</p>\n<h2 id=\"ce\"><a class=\"anchor\" href=\"#ce\">#</a> CE</h2>\n<p>资源网址:<a href=\"https://wpfx.org/\">https://wpfx.org/</a></p>\n<p>[CE](D:\\Software\\Cheat_Engine_7.5\\Cheat Engine 7.5)</p>\n<p><a href=\"%E2%80%AAE:%5CTools%5COD%5COllyICE%5COD.exe\">ollydbg</a></p>\n<p>搜字符串的时候把代码页勾上，可以搜出更多</p>\n<h4 id=\"找血量\"><a class=\"anchor\" href=\"#找血量\">#</a> 找血量</h4>\n<p>可以换装备，被怪打</p>\n<h4 id=\"搜byte\"><a class=\"anchor\" href=\"#搜byte\">#</a> 搜 byte</h4>\n<p>可以勾选快速扫描，4 字节对齐，这样可以加快速度</p>\n<h4 id=\"天龙八部\"><a class=\"anchor\" href=\"#天龙八部\">#</a> 天龙八部</h4>\n<p>TODO: p37</p>\n<p>记得启动器里面选 32 位</p>\n<p><code>axery123@changyou.com</code></p>\n<p><code>123axery</code></p>\n<p><code>岳朋 男 211481198401154411</code></p>\n<h5 id=\"人物状态\"><a class=\"anchor\" href=\"#人物状态\">#</a> 人物状态</h5>\n<p>rcx + 234</p>\n<p>1A34D9946D0 + 234</p>\n<p>rcx = rax+80</p>\n<p>rax=1A30B1C01D0</p>\n<p>Game.exe+593935</p>\n<h2 id=\"汇编指令\"><a class=\"anchor\" href=\"#汇编指令\">#</a> 汇编指令</h2>\n<h4 id=\"lea\"><a class=\"anchor\" href=\"#lea\">#</a> lea</h4>\n<pre><code>lea eax, dword ptr [ebp-8]\n</code></pre>\n<p>把右边的地址复制给左边</p>\n<h4 id=\"pushad-popad\"><a class=\"anchor\" href=\"#pushad-popad\">#</a> pushad, popad</h4>\n<p>把 8 个寄存器全部 push 到栈上面</p>\n<h4 id=\"rep-movs\"><a class=\"anchor\" href=\"#rep-movs\">#</a> rep movs</h4>\n<p>循环 ecx 次，每次把 esi 地址的内容复制给 edi 地址的内容，然后 esi,edi 增加 4</p>\n<h3 id=\"栈\"><a class=\"anchor\" href=\"#栈\">#</a> 栈</h3>\n<h4 id=\"ebp\"><a class=\"anchor\" href=\"#ebp\">#</a> ebp</h4>\n<p>栈顶</p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>b</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">ebp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span></span></span></span> 是保持上次的 ebp 值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mtext> </mtext><mi>e</mi><mi>b</mi><mi>p</mi><mo separator=\"true\">,</mo><mi>m</mi><mi>o</mi><mi>v</mi><mtext> </mtext><mi>e</mi><mi>b</mi><mi>p</mi><mo separator=\"true\">,</mo><mi>e</mi><mi>s</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">push \\ ebp, mov \\ ebp, esp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">es</span><span class=\"mord mathnormal\">p</span></span></span></span></p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>e</mi><mi>b</mi><mi>p</mi><mo>+</mo><mn>4</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[ebp+4]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">]</span></span></span></span> 是回去的地址</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>e</mi><mi>b</mi><mi>p</mi><mo>+</mo><mn>8</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[ebp+8]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">8</span><span class=\"mclose\">]</span></span></span></span> 是传入的第一个参数</p>\n</li>\n</ul>\n<h2 id=\"ollydbg\"><a class=\"anchor\" href=\"#ollydbg\">#</a> OllyDBG</h2>\n<p><a href=\"E:%5CTools%5COD%5COllyICE%5COD.exe\">ollydbg</a></p>\n<p>汉化包</p>\n<p><a href=\"https://github.com/lennylxx/ollydbg-zh/releases\">https://github.com/lennylxx/ollydbg-zh/releases</a></p>\n<p>复制到根目录之后，可以在 file 里面选择 gui language 为中文</p>\n<h3 id=\"快捷键\"><a class=\"anchor\" href=\"#快捷键\">#</a> 快捷键</h3>\n<ul>\n<li>回车：进入 call</li>\n<li>F9: 运行</li>\n<li>F8: 步过 把 call 运行完</li>\n<li>F7: 步入： 运行到 call 的开头</li>\n<li><code>-</code>  后退</li>\n<li><code>+</code>  前进</li>\n<li>F2：断点</li>\n<li>F4：运行到当前指向的命令</li>\n<li>Ctrl+F9: 执行到返回</li>\n<li>Ctrl+G: 查看地址，APT 代码</li>\n</ul>\n<h3 id=\"x64dbg-2\"><a class=\"anchor\" href=\"#x64dbg-2\">#</a> x64dbg</h3>\n<ul>\n<li>\n<p>再选项里吗可以设置关闭断点</p>\n</li>\n<li>\n<p>带参数调试 ： 文件，改变命令行</p>\n</li>\n<li>\n<p>高亮寄存器：快捷键 H，再选项中打开</p>\n</li>\n</ul>\n<h3 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h3>\n<ul>\n<li>API 断点:  <code>bp MessageBoxA</code></li>\n<li>dd 输出地址的值   <code>dd eax</code></li>\n</ul>\n<h3 id=\"查找字符串\"><a class=\"anchor\" href=\"#查找字符串\">#</a> 查找字符串</h3>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240929115846957.png\" alt=\"image-20240929115846957\"></p>\n<h3 id=\"附加进程\"><a class=\"anchor\" href=\"#附加进程\">#</a> 附加进程</h3>\n<p>文件，附加 j 进程，选择想要的进程</p>\n<p>点击三角形让程序运行，</p>\n<p>如果卡住了可以按 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> , 然后右键 Resume all threads</p>\n<h4 id=\"od界面\"><a class=\"anchor\" href=\"#od界面\">#</a> OD 界面</h4>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> 是模块，选择游戏模块</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 是初始界面</p>\n<p>查找注释：</p>\n<p>先在 E 窗口找到主程序，然后右键查找用户定义的注释</p>\n<h4 id=\"跳转\"><a class=\"anchor\" href=\"#跳转\">#</a> 跳转</h4>\n<p>Ctrl+G 打开调整，输入内存地址或者  <code>ws2_32.send</code></p>\n<p>x64dbg 是  <code>game + 2ECE21</code>  可以加入基地址</p>\n<p>可以跳到这个模块的 send 函数</p>\n<h3 id=\"od断点\"><a class=\"anchor\" href=\"#od断点\">#</a> OD 断点</h3>\n<p>右键可以下断点</p>\n<h4 id=\"内存断点\"><a class=\"anchor\" href=\"#内存断点\">#</a> 内存断点</h4>\n<p>内存访问的时候断</p>\n<h4 id=\"硬件断点\"><a class=\"anchor\" href=\"#硬件断点\">#</a> 硬件断点</h4>\n<p>只能 4 个</p>\n<p>可以在内存地址右键，硬件断点，硬件写入，Byte</p>\n<p>来查找谁写入了这个位置</p>\n<h4 id=\"f2断点\"><a class=\"anchor\" href=\"#f2断点\">#</a> F2 断点</h4>\n<p>可以下任意多个</p>\n<h4 id=\"api断点\"><a class=\"anchor\" href=\"#api断点\">#</a> api 断点</h4>\n<p><code>bp ws2_32.send</code></p>\n<h4 id=\"条件断点\"><a class=\"anchor\" href=\"#条件断点\">#</a> 条件断点</h4>\n<p>shift + F2</p>\n<p><code>[76ad5000]==06aa72a0</code></p>\n<h3 id=\"发包\"><a class=\"anchor\" href=\"#发包\">#</a> 发包</h3>\n<h4 id=\"发包函数\"><a class=\"anchor\" href=\"#发包函数\">#</a> 发包函数</h4>\n<ul>\n<li>send</li>\n<li>sendto</li>\n<li>WSASend</li>\n<li>WSPSend: 在  <code>ws2_32.WEP</code>  下面有个  <code>call esi</code>  这个是</li>\n</ul>\n<p>一般是  <code>ws2_32.send</code>  在这个模块里，如果不是的话，需要指定模块名字</p>\n<h2 id=\"易语言\"><a class=\"anchor\" href=\"#易语言\">#</a> 易语言</h2>\n<p><a href=\"https://www.dywt.com.cn/\">https://www.dywt.com.cn/</a> 产品下载 5.93</p>\n<p>下载易语言安装补丁 ( <code>CTF/逆向</code> )</p>\n<p>把  <code>e.exe</code>  替换过去，linker 里面的内容也拖过来替换</p>\n<p>然后打开替换来的  <code>link.e</code>  用易语言打开，然后运行一下就好了</p>\n<h4 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h4>\n<ul>\n<li>ctrl + L: 添加变量</li>\n</ul>\n<h4 id=\"编译\"><a class=\"anchor\" href=\"#编译\">#</a> 编译</h4>\n<p>编译，静态编译，</p>\n<p>静态的会打包所有需要的 dll</p>\n<h4 id=\"常用设置\"><a class=\"anchor\" href=\"#常用设置\">#</a> 常用设置</h4>\n<p>程序，程序配置对话框：可以配置图标，描述</p>\n<p>工具</p>\n<ul>\n<li>\n<p>支持库配置里全勾上</p>\n</li>\n<li>\n<p>系统设置，</p>\n<ul>\n<li>通常：可以取消编译时检查死循环</li>\n<li>存根，可以设置请求管理员权限</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"自定义数据类型\"><a class=\"anchor\" href=\"#自定义数据类型\">#</a> 自定义数据类型</h4>\n<p>就是 c 的 struct</p>\n<h4 id=\"基本函数\"><a class=\"anchor\" href=\"#基本函数\">#</a> 基本函数</h4>\n<p>到文本：转换成字符串</p>\n<h4 id=\"if\"><a class=\"anchor\" href=\"#if\">#</a> if</h4>\n<pre><code class=\"language-e\">如果 (时间 % 2)\n</code></pre>\n<p>没有 else 的</p>\n<pre><code class=\"language-e\">如果真 ()\n</code></pre>\n<p>判断 是 switch</p>\n<h4 id=\"for\"><a class=\"anchor\" href=\"#for\">#</a> for</h4>\n<p>j 从 1 到 100</p>\n<pre><code class=\"language-e\">计次循环首(100, j)\ns = s+j\n计次循环尾()\n</code></pre>\n<h4 id=\"while\"><a class=\"anchor\" href=\"#while\">#</a> while</h4>\n<pre><code class=\"language-e\">\na ＝ 1\n判断循环首 (a ＜ 10)\n    a ＝ a ＋ 1\n判断循环尾 ()\n标签1.标题 ＝ 到文本 (a)\n\n</code></pre>\n<h4 id=\"dll命令\"><a class=\"anchor\" href=\"#dll命令\">#</a> Dll 命令</h4>\n<p>比如 Messagebox</p>\n<h3 id=\"组件\"><a class=\"anchor\" href=\"#组件\">#</a> 组件</h3>\n<h4 id=\"时钟\"><a class=\"anchor\" href=\"#时钟\">#</a> 时钟</h4>\n<p>时钟周期</p>\n<h3 id=\"visual-studio\"><a class=\"anchor\" href=\"#visual-studio\">#</a> Visual Studio</h3>\n<p><a href=\"https://visualstudio.microsoft.com/de/\">https://visualstudio.microsoft.com/de/</a> 下载就行了</p>\n<p>然后只勾选 c<ins> 和 windows, 扩展开发，在 C</ins> 桌面开发里面额外勾选 MFC</p>\n<p>文件，账户选项，搜索字体，可以调整字体大小</p>\n<h4 id=\"反汇编\"><a class=\"anchor\" href=\"#反汇编\">#</a> 反汇编</h4>\n<p>打个断点运行后，右键选择  <code>转到反汇编</code></p>\n<p>右键可以选择是否显示变量名</p>\n<h5 id=\"内存\"><a class=\"anchor\" href=\"#内存\">#</a> 内存</h5>\n<p>在调试，窗口，内存里面找</p>\n<p>内存里面可以  <code>&amp;a</code>  来找到变量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 的地址内容</p>\n<h4 id=\"mfc-dll\"><a class=\"anchor\" href=\"#mfc-dll\">#</a> MFC DLL</h4>\n<p>选择静态链接</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240811135822371.png\" alt=\"image-20240811135822371\"></p>\n<p>视图，其他窗口，资源视图，把他选出来</p>\n<p>然后右键添加资源，选择 Dialog</p>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240811140259142.png\" alt=\"image-20240811140259142\"></p>\n<p>确定和取消按钮可以自己删掉</p>\n<h4 id=\"32位程序\"><a class=\"anchor\" href=\"#32位程序\">#</a> 32 位程序</h4>\n<p>可以选择在 debug 旁边 选择 x86 来写 win32 程序</p>\n<h4 id=\"项目tl1属性\"><a class=\"anchor\" href=\"#项目tl1属性\">#</a> 项目，TL1 属性</h4>\n<p>可以选择 windows sdk 版本</p>\n<p>使用的字符集</p>\n<h4 id=\"工具箱\"><a class=\"anchor\" href=\"#工具箱\">#</a> 工具箱</h4>\n<p>视图，工具箱，里面有组件</p>\n<p>视图，属性窗口也要选</p>\n<h4 id=\"创建类\"><a class=\"anchor\" href=\"#创建类\">#</a> 创建类</h4>\n<p>右键 dialog 的空白处，添加类作为创建的这个 dialog 的类名，可以取名 <code>XXDialog</code></p>\n<p>在 DLL 的主 cpp 文件中</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>TLDialog<span class=\"token operator\">*</span> dialog<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>DWORD WINAPI <span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span>LPARAM lpData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tdialog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> TLDialog<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 分配空间</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tdialog<span class=\"token operator\">-></span><span class=\"token function\">DoModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 阻塞的方式 模态窗口</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">delete</span> dialog<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 释放空间</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token function\">FreeLibraryAndExitThread</span><span class=\"token punctuation\">(</span>theApp<span class=\"token punctuation\">.</span>m_hInstance<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 释放 DLL 退出线程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// CMFCLibrary1App 初始化</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>BOOL <span class=\"token class-name\">CMFCLibrary1App</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token class-name\">CWinApp</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPTHREAD_START_ROUTINE<span class=\"token punctuation\">)</span>ShowDialog<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建线程</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/image-20240811144327614.png\" alt=\"image-20240811144327614\"></p>\n<p>右键重新生成来编译</p>\n<p>在 CE 中查找好基地址和便宜</p>\n<blockquote>\n<p>练习：查找新天龙八部怀旧的人物状态</p>\n</blockquote>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    DWORD base_addr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span><span class=\"token function\">GetModuleHandleA</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Game.exe\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x5946DC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    DWORD offset1 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>base_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x0c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    DWORD offset2 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>offset1 <span class=\"token operator\">+</span> <span class=\"token number\">0x14c</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    DWORD addr <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>offset2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">outputdebug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"人物信息：人物状态: %d\"</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>exception<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">outputdebug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后是输出在 debug 信息的代码</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">outputdebug</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pszFormat<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">DEBUG</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">char</span> szbufFormat<span class=\"token punctuation\">[</span><span class=\"token number\">0x1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">char</span> szbufFormatGame<span class=\"token punctuation\">[</span><span class=\"token number\">0x1100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tva_list argList<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token function\">va_start</span><span class=\"token punctuation\">(</span>argList<span class=\"token punctuation\">,</span> pszFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token function\">vsprintf_s</span><span class=\"token punctuation\">(</span>szbufFormat<span class=\"token punctuation\">,</span> pszFormat<span class=\"token punctuation\">,</span> argList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token function\">strcat_s</span><span class=\"token punctuation\">(</span>szbufFormatGame<span class=\"token punctuation\">,</span> szbufFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">OutputDebugStringA</span><span class=\"token punctuation\">(</span>szbufFormatGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token function\">va_end</span><span class=\"token punctuation\">(</span>argList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个 dubug 信息可以在 DebugView 来看</p>\n<p>用管理员权限打开 DebugView, 然后打开监视核心，可以选择过滤字符串。</p>\n<h4 id=\"汇编代码注入\"><a class=\"anchor\" href=\"#汇编代码注入\">#</a> 汇编代码注入</h4>\n<p>call 函数的时候要记得先放在寄存器里</p>\n<p>Detach 之后再注入</p>\n<pre><code class=\"language-asm\">pushad\nmov ecx, 0x3F080A28\nmov eax, 0x6a5e60\ncall eax\npopad\n</code></pre>\n<p>ecx:</p>\n<pre><code class=\"language-asm\">[[[Game.exe+5946FC]+ 60]+ 154]\n</code></pre>\n<h2 id=\"天龙八部怀旧\"><a class=\"anchor\" href=\"#天龙八部怀旧\">#</a> 天龙八部怀旧</h2>\n<h4 id=\"背包数组\"><a class=\"anchor\" href=\"#背包数组\">#</a> 背包数组</h4>\n<p>cnt:</p>\n<pre><code class=\"language-asm\">[[i*4+[[Game.exe+594724]+181c4]]+0x14]+0x58\n</code></pre>\n<p>base</p>\n<pre><code class=\"language-asm\">[[Game.exe+594724]+181c4]\n</code></pre>\n<p>名字</p>\n<p>[[base+i*4]+2c]+18]</p>\n<ul>\n<li><code>+2c,+1c</code>  说明</li>\n<li><code>+2c,+20</code>  使用等级</li>\n<li><code>+2c,+40</code>  耐久</li>\n</ul>\n<h4 id=\"npc-遍历\"><a class=\"anchor\" href=\"#npc-遍历\">#</a> NPC 遍历</h4>\n<p><img src=\"/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/c45b801d423975f7a189ebf3b9e8db1.png\" alt=\"c45b801d423975f7a189ebf3b9e8db1\"></p>\n<p>这是一个链表</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>esi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>edi<span class=\"token operator\">+</span><span class=\"token number\">1</span>c<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>esi <span class=\"token operator\">!=</span> <span class=\"token punctuation\">[</span>edi<span class=\"token operator\">+</span><span class=\"token number\">1</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    esi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>esi<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"血量遍历\"><a class=\"anchor\" href=\"#血量遍历\">#</a> 血量遍历</h4>\n<p>先用 CE 搜索浮点数找到血量百分比</p>\n<pre><code class=\"language-asm\">[[[[[[[[[0x117CCB8]+0x54]+0x4]]]+0x14]+0x148]+0x10]+0x8]=target\n</code></pre>\n",
            "tags": [
                "CTF文章"
            ]
        },
        {
            "id": "https://cr4zyp1x3l.netlify.app/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E4%B8%8E%E7%A2%B0%E6%92%9E%E6%83%85%E5%86%B5/",
            "url": "https://cr4zyp1x3l.netlify.app/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E4%B8%8E%E7%A2%B0%E6%92%9E%E6%83%85%E5%86%B5/",
            "title": "哈希长度与碰撞情况",
            "date_published": "2025-02-03T22:12:51.000Z",
            "content_html": "<h1 id=\"哈希长度与碰撞情况\"><a class=\"anchor\" href=\"#哈希长度与碰撞情况\">#</a> 哈希长度与碰撞情况</h1>\n<p>以下是各种常见长度的哈希函数及其碰撞情况分析：</p>\n<table>\n<thead>\n<tr>\n<th>哈希长度 (bit)</th>\n<th>常见算法</th>\n<th>碰撞情况</th>\n<th>碰撞年份</th>\n<th>发明年份</th>\n<th>状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>128-bit</strong></td>\n<td>MD5</td>\n<td>存在已知有效碰撞攻击</td>\n<td>2004 年</td>\n<td>1992 年</td>\n<td>已过时，不推荐使用</td>\n</tr>\n<tr>\n<td><strong>160-bit</strong></td>\n<td>SHA-0, SHA-1, RIPEMD-160</td>\n<td>SHA-0: 存在已知有效碰撞攻击</td>\n<td>SHA-0: 2004 年</td>\n<td>SHA-0: 1993 年</td>\n<td>SHA-0: 已弃用，不推荐使用</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>SHA-1: 存在已知有效碰撞攻击</td>\n<td>SHA-1: 2017 年</td>\n<td>SHA-1: 1995 年</td>\n<td>已过时，不推荐使用</td>\n</tr>\n<tr>\n<td><strong>256-bit</strong></td>\n<td>SHA-256, SHA-3-256</td>\n<td>暂无已知有效碰撞攻击</td>\n<td>-</td>\n<td>SHA-256: 2001 年</td>\n<td>安全，广泛使用</td>\n</tr>\n<tr>\n<td><strong>384-bit</strong></td>\n<td>SHA-384</td>\n<td>暂无已知有效碰撞攻击</td>\n<td>-</td>\n<td>2001 年</td>\n<td>安全，高安全性需求</td>\n</tr>\n<tr>\n<td><strong>512-bit</strong></td>\n<td>SHA-512, SHA-3-512</td>\n<td>暂无已知有效碰撞攻击</td>\n<td>-</td>\n<td>SHA-512: 2001 年</td>\n<td>非常安全，高性能需求</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"碰撞情况说明\"><a class=\"anchor\" href=\"#碰撞情况说明\">#</a> 碰撞情况说明</h2>\n<ul>\n<li>\n<p><strong>128-bit (MD5)</strong>:</p>\n<ul>\n<li>MD5 是一种输出为 128 位的哈希算法，但由于其设计的安全性不足，早在 2004 年就被发现可以有效制造碰撞。</li>\n<li>MD5 于 1992 年被发明，不适合任何需要密码学安全性的场景，仅可用于低安全性完整性校验。</li>\n</ul>\n</li>\n<li>\n<p><strong>160-bit (SHA-0, SHA-1, RIPEMD-160)</strong>:</p>\n<ul>\n<li>SHA-0 是 SHA 系列的初代版本，存在严重的设计缺陷，在 2004 年被证明可以制造碰撞。SHA-0 于 1993 年发明。</li>\n<li>SHA-1 作为输出 160 位的主流算法，在 2017 年被证实可以通过理论和实践攻击制造碰撞。SHA-1 于 1995 年发明。</li>\n<li>RIPEMD-160 虽尚未有公开的碰撞记录，但不如更高位算法安全。</li>\n</ul>\n</li>\n<li>\n<p><strong>256-bit (SHA-256, SHA-3-256)</strong>:</p>\n<ul>\n<li>目前没有已知的碰撞攻击。</li>\n<li>SHA-256 于 2001 年被发明，适合绝大多数场景，如数字签名、区块链和数据完整性验证。</li>\n</ul>\n</li>\n<li>\n<p><strong>384-bit (SHA-384)</strong>:</p>\n<ul>\n<li>为高安全需求设计，未有任何已知的碰撞攻击。</li>\n<li>SHA-384 于 2001 年发明，适用于密钥交换、长时间数据存储等高安全性应用。</li>\n</ul>\n</li>\n<li>\n<p><strong>512-bit (SHA-512, SHA-3-512)</strong>:</p>\n<ul>\n<li>提供极高的安全性，特别适用于对抗潜在的量子计算威胁。</li>\n<li>SHA-512 于 2001 年发明，性能消耗较高，适合长期存储的场景。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"md5-哈希碰撞\"><a class=\"anchor\" href=\"#md5-哈希碰撞\">#</a> MD5 哈希碰撞</h2>\n<p>b&quot;TEXTCOLLBYfGiJUETHQ4hAcKSMd5zYpgqf1YRDhkmxHkhPWptrkoyz28wnI9V0aHeAuaKnak&quot; b&quot;TEXTCOLLBYfGiJUETHQ4hEcKSMd5zYpgqf1YRDhkmxHkhPWptrkoyz28wnI9V0aHeAuaKnak&quot;</p>\n<p>md5 计算结果均为：faad49866e9498fc1719f5289e7a0269</p>\n",
            "tags": [
                "CTF文章"
            ]
        },
        {
            "id": "https://cr4zyp1x3l.netlify.app/x3ctf2025%20Write%20Up/",
            "url": "https://cr4zyp1x3l.netlify.app/x3ctf2025%20Write%20Up/",
            "title": "x3ctf2025 Write Up",
            "date_published": "2025-02-03T16:39:31.000Z",
            "content_html": "<h1 id=\"x3ctf-write-up\"><a class=\"anchor\" href=\"#x3ctf-write-up\">#</a> x3ctf Write Up</h1>\n<h2 id=\"1-misc\"><a class=\"anchor\" href=\"#1-misc\">#</a> 1. Misc</h2>\n<h3 id=\"p11n-trophy签到题\"><a class=\"anchor\" href=\"#p11n-trophy签到题\">#</a> p11n-trophy（签到题）:</h3>\n<p>题目描述：<br>\n<img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127165738440.png\" alt=\"image-20250127165738440\"></p>\n<p>我们首先会得到这样一份证书：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/trophy.png\" alt=\"trophy\"></p>\n<p>第一题签到题的答案就是证书下面正中间的 “This certificate does not grant the rank of Master&quot;。</p>\n<h3 id=\"trophy-plus-trophy-plus64\"><a class=\"anchor\" href=\"#trophy-plus-trophy-plus64\">#</a> trophy-plus + trophy-plus64:</h3>\n<p>这两道目描述一模一样</p>\n<h3 id=\"image-20250127165834982\"><a class=\"anchor\" href=\"#image-20250127165834982\">#</a> <img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127165834982.png\" alt=\"image-20250127165834982\"></h3>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127165903642.png\" alt></p>\n<p>其中一个 flag 是藏在 certificate 周围一圈的位置：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127170254595.png\" alt=\"image-20250127170254595\"></p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127170344389.png\" alt=\"image-20250127170344389\"></p>\n<p>人工将这些内容识别，再翻译成二进制然后解码就会得到 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decode_binary</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> mapping<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># Convert content to binary using the mapping</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    binary_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>mapping<span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> content <span class=\"token keyword\">if</span> char <span class=\"token keyword\">in</span> mapping<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># Split the binary string into 8-bit chunks</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    bytes_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>binary_str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>binary_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># Convert each 8-bit chunk to a character</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    decoded_text <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> byte <span class=\"token keyword\">in</span> bytes_list <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>byte<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> decoded_text</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Input string</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>c_1 <span class=\"token operator\">=</span> <span class=\"token string\">\"MVVVVMMMMMVVMMVVMVVMMMVVMVVVVMVVMVVM VMMV MV MVVVVVMVVMM VMM MMVVMMMV\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c_2 <span class=\"token operator\">=</span>   <span class=\"token string\">\"MVVMM VMMMVVMVVVMMM VMMVVVMVVVMV MMM VMVVVVVMVVM VMVVMVVMVVVMMMVVMMMMMVVVMVVVM VMVVVVV\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>c_3 <span class=\"token operator\">=</span> <span class=\"token string\">\"VMMMVVMMM VMMMVVMVVVVVM VMMV MMVVVMMMMMVVMMMVVMMVVMVVVVVM VMMM VMMVVMVVMMVVMMVVMMVVVM VMV MVVVMVVVVVM VM VM VMMVVMMV MMMVVMVVVVVMV MMMV MMVVMMMVVMVVM VMV MVVVMMMMMVVMMVVMMMVVMVVVVVM VMV MVVMVVMMVVMVVVM VMVVMVVM\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>reversed_c_3 <span class=\"token operator\">=</span> c_3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>c_4 <span class=\"token operator\">=</span> <span class=\"token string\">\"MMV MMVVMMMMMVVMMVVMMMVVMMVVVMVVMVVMMVVMMVVVVVM VMV MMVVVVMMV MMVVVMMM VMVVMMMVVVMVVM\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>reversed_c_4 <span class=\"token operator\">=</span> c_4<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>c_5 <span class=\"token operator\">=</span> <span class=\"token string\">\"MMVVMMM VMVVMVVVMMVVMMVVVM VMVVVVVMVVMVVMMMMVVMMMMMVVMVVMMMVVVVVMV\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># mapping = &#123;'M': '0', 'V': '1'&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mapping1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mapping2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># print(decode_binary(c_1, mapping2)+decode_binary(c_2, mapping2) + decode_binary(c_3, mapping2) + decode_binary(c_4, mapping2) + decode_binary(c_5, mapping2) )</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>decode_binary<span class=\"token punctuation\">(</span>c_1<span class=\"token punctuation\">,</span> mapping2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>decode_binary<span class=\"token punctuation\">(</span>c_2<span class=\"token punctuation\">,</span> mapping2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> decode_binary<span class=\"token punctuation\">(</span>reversed_c_3<span class=\"token punctuation\">,</span> mapping2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> decode_binary<span class=\"token punctuation\">(</span>reversed_c_4<span class=\"token punctuation\">,</span> mapping2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> decode_binary<span class=\"token punctuation\">(</span>c_5<span class=\"token punctuation\">,</span> mapping2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 输出结果：x3c &#123;i_d1dn't_kn0w_mvm_c0uld_be_us3d_f0r_b1n4ry_3nc0d1ng_l0l&#125;</span></pre></td></tr></table></figure><p>另外一个 flag 则是藏在右下角的勋章里：<br>\n![屏幕截图 2025-01-25 210727](<a href=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE\">https://raw.githubusercontent.com/Lycorisby/Picture/main/ 屏幕截图</a> 2025-01-25 210727.png)</p>\n<p>人工将这些内容识别出来然后用 base64 进行解码即可。</p>\n<p>内容大概为：</p>\n<pre><code>-----BEGIN CERTIFICATE-----\nMIIDyjCCAlCgAwIBAgISBKmF/S4TYSXpTzcor9eZJ/GrMAoGCC\nqGSM49BAMDMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEwlMZXQn\ncyBFbmNyeXB0MQswOQYDVQQDEwJFNjAeFw0yNTAxMDYyMDM2MD\nFaFw0yNTA0MDYyMDM2MDBaMEAxPjA8BgNVBAMMNXgzY3ttdTV0\nX2IzX2Zlbl90eXAxbmdfdGgxcl9ieV9oNG5kXzEzNzUxMDUzMD\nQyNDgzNjF9MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcYu3\nflnEI2dttI5lQQmzRld72SDdBqCDtfto9pg5t/NFFIolkY8W8C\nryM9XlJEx3NAOGTgBoeUNTuWgiCseQeaOCAjYwggIyMA4GA1Ud\nDwEB/wQEAwIHgDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQ\nUHAwIwDAYDVR0TAQH/BAIwADAdBgNVRQ4EFgQUrbtyF28hjw8o\nIqwXpakw8t7J9jQwHwYDVR0jBBgwFoAUkydGmAOpUWiOmNbEQk\njbI79YlNIwVQYIKwYBBQUHAQEESTBHMCEGCCsGAQUFBzABhhVo\ndHRwOi8vZTYuby5sZW5jci5vcmcwIgYIKwYBBQUHMAKGFmh0dH\nA6Ly91Ni5pLmxlbmNyLm9yZy8wQAYDVR0RBDkwN4IleDNje2ll\nNXRfYjNfZnVuX3R5cDFuZl90aDFzX2J5X2g0bmRfMTM3NTEwNT\nMwNDI0ODM2MX0wEwYDVR0gBAwwCjAIBgZngQwBAgEwggEDBgor\nBgEEAdZ5AgQCBIH0BIHxAO8AdQB9WR4S4XggexxhZ3xe/fjQhl\nw0oE6VnrkDL9kOjC55uAAAAZQ9inTEAAAEAwBGMEQCIENpWRg9\n8SQo5JdzyjgnyFeUY0WnNVzn5NkdDA3bzeKbAiBsAkk3fe5esm\n7A0efsLN/EyFjEK/NBGqYxgOucgZheQwB2ABNK3xglmEIjeAxv\n70x6kaQWtyNJzlhXat+u2qfCq+AiAAAB1D2KdXoAAAQDAEcwRQ\nIgBfU4pkiNyNsl+I6skjXz6qqu+mNoI4JvtDsoYxoI+ZoCIQCR\niMQSCEwahN0ImXu3cwDeyM+AbNeve0VgSLMSUBdxvTAKBggghk\njOPQQDAwNoADBlAjEAvxa6nSpUMl7NuDB/+LJfzTskR498vLoe\ntnZuHo14J6d9zuFRGQ8Dk4w2aQNsbuVsAjB9fE6GJYBiebb4aH\nu/J2amych3KP//D951/CdmiV5PKZqXWWdpaQZL+pbmsXRa8rM=\n-----END CERTIFICATE-----\n</code></pre>\n<p>会有一些误差，所以最后提交 flag 时需要多试几次。</p>\n<h3 id=\"foundations-osint\"><a class=\"anchor\" href=\"#foundations-osint\">#</a> foundations （Osint）：</h3>\n<p>题目描述：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127171132744.png\" alt=\"image-20250127171132744\"></p>\n<p>使用<a href=\"https://archive.org/%E6%9D%A5%E6%90%9C%E7%B4%A2%E8%BF%99%E4%B8%AA%E6%AF%94%E8%B5%9B%E7%BD%91%E7%AB%99%E7%9A%84%E5%8E%86%E5%8F%B2%E7%BA%AA%E5%BD%95%E5%86%85%E5%AE%B9\"> https://archive.org/ 来搜索这个比赛网站的历史纪录内容</a></p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127171253342.png\" alt=\"image-20250127171253342\"></p>\n<p>可以在这里发现最早的纪录是在 2024 年 7 月 14 日：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127171328034.png\" alt=\"image-20250127171328034\"></p>\n<p>点进去会发现：<br>\n<img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127171419684.png\" alt=\"image-20250127171419684\"></p>\n<p m4yb3_w3ll_m4ke_4_ch4ll3nge_0u7_0f_7h1s>x3CTF</p>\n<h3 id=\"mvm\"><a class=\"anchor\" href=\"#mvm\">#</a> mvm：</h3>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127171618699.png\" alt=\"image-20250127171618699\"></p>\n<p>打开下载文件会得到</p>\n<pre><coden\n</code></pre>\n<p>跟之前一样，将其转成二进制再解码会得到</p>\n<pre><code>++[----------&gt;+&lt;]&gt;.+++++++++.---------.-[-&gt;+++++&lt;]&gt;-.+[-----&gt;+&lt;]&gt;+.+++++++++.---------.-[----&gt;+++++&lt;]&gt;.+[---&gt;++&lt;]&gt;++.&gt;-[---&gt;+&lt;]&gt;---.--[-&gt;++++&lt;]&gt;+.++++++++.+++++.[--&gt;+++++++++&lt;]&gt;.[---&gt;+++++&lt;]&gt;.++++++++++.++++++++++++.-[-----&gt;+&lt;]&gt;.&gt;-[---&gt;+&lt;]&gt;.-[-----&gt;+&lt;]&gt;-.++++++++.------.-.++[-&gt;+++++&lt;]&gt;+.[-----&gt;++++&lt;]&gt;+.+++++++++.---------.&gt;--[--&gt;+++&lt;]&gt;.\n</code></pre>\n<p>很显然这是 Brainfuck, 所以找个在线的 intepreter 运行一下就可以得到 flag：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127172039130.png\" alt=\"image-20250127172039130\"></p>\n<p mvm_brain_is_fucked_mvm>MVM</p>\n<h3 id=\"count-the-mvms\"><a class=\"anchor\" href=\"#count-the-mvms\">#</a> count-the-mvms</h3>\n<p>主要是数背景的 mvm 个数，发现它们的像素点是一样的。所以写个图像匹配脚本即可.</p>\n<p>首先要把 pdf 转换成 png，推荐 adobe acrobat</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cvlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># cvlib 是自己写的库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>im <span class=\"token operator\">=</span> cvlib<span class=\"token punctuation\">.</span>read_img<span class=\"token punctuation\">(</span><span class=\"token string\">\"certificate_h4tum.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sim <span class=\"token operator\">=</span> cvlib<span class=\"token punctuation\">.</span>subrectimg<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> <span class=\"token number\">605</span><span class=\"token punctuation\">,</span> <span class=\"token number\">516</span><span class=\"token punctuation\">,</span> <span class=\"token number\">837</span><span class=\"token punctuation\">,</span> <span class=\"token number\">665</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sim2 <span class=\"token operator\">=</span> cvlib<span class=\"token punctuation\">.</span>subrectimg<span class=\"token punctuation\">(</span>sim<span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mvm <span class=\"token operator\">=</span> cvlib<span class=\"token punctuation\">.</span>subrectimg<span class=\"token punctuation\">(</span>sim2<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read success\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">match</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> x<span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mvm<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> y<span class=\"token operator\">+</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mvm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mvm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mvm<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mvm<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">[</span>ri<span class=\"token punctuation\">,</span>gi<span class=\"token punctuation\">,</span>bi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> im<span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> r <span class=\"token operator\">!=</span> ri <span class=\"token keyword\">or</span> g <span class=\"token operator\">!=</span> gi <span class=\"token keyword\">or</span> b <span class=\"token operator\">!=</span> bi<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">count_matches</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                j <span class=\"token operator\">+=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mvm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> cnt</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_matches<span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finish\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"2-crypto\"><a class=\"anchor\" href=\"#2-crypto\">#</a> 2. Crypto</h2>\n<h3 id=\"man-vs-matrix\"><a class=\"anchor\" href=\"#man-vs-matrix\">#</a> man-vs-matrix:</h3>\n<p>题目描述：</p>\n<p><img src=\"https://raw.githubusercontent.com/Lycorisby/Picture/main/image-20250127172638257.png\" alt=\"image-20250127172638257\"></p>\n<p>打开下载文件会看到：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sage<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> bytes_to_long</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RNG</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> next_prime<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\"># 16777259</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>F <span class=\"token operator\">=</span> GF<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>M <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>bytes_to_long<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">,</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mvm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># [77, 118, 109]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>gen <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>F<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_random_num</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>M <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>        <span class=\"token comment\"># len = 3</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>gen<span class=\"token operator\">**</span>self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> out <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>state</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">b\"MVM&#123;???????????????????????????&#125;\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>seed <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>               <span class=\"token comment\"># 27 位，27/3=9</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>rng <span class=\"token operator\">=</span> RNG<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>samples <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    samples<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>rng<span class=\"token punctuation\">.</span>get_random_num<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>samples <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># samples = [6192533, 82371, 86024, 4218430, 12259879, 16442850, 6736271, 7418630, 15483781]</span></pre></td></tr></table></figure><p>是几个随机数的生成器（RNG），但生成逻辑非常简单。</p>\n<p>每次会计算</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>M</mi><mo>⋅</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>n</mi><mi>e</mi><mi>w</mi><mi mathvariant=\"normal\">_</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">(M \\cdot state) \\cdot new\\_state\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span></span></span></span></span></p>\n<p>(括号外的乘法是内积。在 sage 里，矩阵与矩阵 / 向量的乘法和向量与向量的内积都是用 *)。并且有</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>n</mi><mi>e</mi><mi>w</mi><mi mathvariant=\"normal\">_</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow></msup><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">new\\_state[i] = 2^{state[i]}.\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.938em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">]</span></span></span></span></span></span></span></span></span><span class=\"mord\">.</span></span></span></span></span></p>\n<p>这里的初始 state 是已知的，所以我们只需要建立一个 9 元 1 次线性方程组即可。</p>\n<p>我们可以写一段 sagemath 的代码来通过解方程逆推出 matrix 以及 flag 内容：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">16777259</span>\t\t<span class=\"token comment\"># = next_prime(2**24)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>F <span class=\"token operator\">=</span> GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>samples <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6192533</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4218430</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12259879</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16442850</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6736271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7418630</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15483781</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 初始状态 S0 = [77, 118, 109]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>S0 <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">next_state</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> vector<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>F<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> st<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 求出 S0 ~ S9</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>S <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>S<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_state<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 构造线性方程组 X * M_vec = Y</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>X <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Y <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    row_coeffs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># M_vec 的顺序: M [0,0], M [0,1], M [0,2], M [1,0], ..., M [2,2]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            row_coeffs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> S<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    X<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> row_coeffs</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    Y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> samples<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 求解 9 个未知量</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>M_vec <span class=\"token operator\">=</span> X<span class=\"token punctuation\">.</span>solve_right<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>M_mat <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> M_vec<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Recovered M =\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>M_mat<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 将 3x3 矩阵以行优先顺序（row-major）展开成 9 个元素</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 对应当初 [bytes_to_long (seed [0:3]), bytes_to_long (seed [3:6]), ..., bytes_to_long (seed [24:27])]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>m_ints <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># Sage 返回的是 GF (p) 的元素，先转成普通整型</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        val <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>M_mat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        m_ints<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># 将每个 val 转成 3 字节后依次拼接</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>seed_recovered <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">.</span>to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"big\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> val <span class=\"token keyword\">in</span> m_ints<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 最终还原 flag = b\"MVM &#123;\" + seed_recovered + b\"&#125;\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>flag_recovered <span class=\"token operator\">=</span> <span class=\"token string\">b\"MVM&#123;\"</span> <span class=\"token operator\">+</span> seed_recovered <span class=\"token operator\">+</span> <span class=\"token string\">b\"&#125;\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Recovered seed  =\"</span><span class=\"token punctuation\">,</span> seed_recovered<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Recovered flag  =\"</span><span class=\"token punctuation\">,</span> flag_recovered<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#最后得到的结果：</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># Recovered M =</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># [7090542 3355762 6252149]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># [5137236 3223662 3497780]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># [7484255 7174495 6698102]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># Recovered seed  = b'l1n34r_fuNcT10n5_4r3_my_f4v'</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># Recovered flag  = b'MVM&#123;l1n34r_fuNcT10n5_4r3_my_f4v&#125;'</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://cr4zyp1x3l.netlify.app/CTF%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "url": "https://cr4zyp1x3l.netlify.app/CTF%E7%9F%A5%E8%AF%86%E7%82%B9/",
            "title": "CTF知识点",
            "date_published": "2024-05-14T22:06:29.000Z",
            "content_html": "<h3 id=\"知识点\"><a class=\"anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<p><a href=\"https://ctf101.org/web-exploitation/overview/\">https://ctf101.org/web-exploitation/overview/</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=5C-OtW7C5oU&amp;t=30s\">https://www.youtube.com/watch?v=5C-OtW7C5oU&amp;t=30s</a></p>\n<p><a href=\"https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask\">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask</a></p>\n<h3 id=\"练习网站\"><a class=\"anchor\" href=\"#练习网站\">#</a> 练习网站</h3>\n<p>buuctf</p>\n<p><a href=\"https://adworld.xctf.org.cn/\">https://adworld.xctf.org.cn/</a></p>\n<p><a href=\"https://ctflearn.com/challenge/1/browse\">https://ctflearn.com/challenge/1/browse</a></p>\n<p><a href=\"https://www.root-me.org/?lang=en\">https://www.root-me.org/?lang=en</a></p>\n<p><a href=\"https://picoctf.org/\">https://picoctf.org/</a></p>\n<ol>\n<li><a href=\"http://tryhackme.com\">tryhackme.com</a></li>\n<li><a href=\"http://hackthebox.eu\">hackthebox.eu</a></li>\n<li><a href=\"http://overthewire.org\">overthewire.org</a></li>\n<li><a href=\"http://Root-me.org\">Root-me.org</a></li>\n<li><a href=\"http://Ringzer0team.com\">Ringzer0team.com</a></li>\n<li><a href=\"http://Hack.me\">Hack.me</a></li>\n<li><a href=\"http://ctftime.org\">ctftime.org</a></li>\n<li><a href=\"http://picoctf.com\">picoctf.com</a></li>\n<li><a href=\"http://ctf365.com\">ctf365.com</a></li>\n<li><a href=\"http://ctf101.org\">ctf101.org</a></li>\n</ol>\n<h3 id=\"虚拟机\"><a class=\"anchor\" href=\"#虚拟机\">#</a> 虚拟机</h3>\n<p>打开或关闭功能，打开 Hyper V, 然后重启</p>\n<p>下载 kali 的 Hyper V 的 Hyper V 镜像。然后双击 bat 安装。然后就能打开了，点击连接就有 gui</p>\n<h2 id=\"文件\"><a class=\"anchor\" href=\"#文件\">#</a> 文件</h2>\n<h3 id=\"图片文件处理\"><a class=\"anchor\" href=\"#图片文件处理\">#</a> 图片文件处理</h3>\n<p>打开图片</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eog xxx.jpg</pre></td></tr></table></figure><h4 id=\"hexdump\"><a class=\"anchor\" href=\"#hexdump\">#</a> hexdump</h4>\n<p>hex 中查找 string</p>\n<ul>\n<li>pdf 里面找隐藏</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>strings xxx.jpg <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> CTFlearn </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>strings <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span> xxx.jpg  <span class=\"token comment\"># >= 10 长度的字符串</span></pre></td></tr></table></figure><p>hexdump</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexdump <span class=\"token parameter variable\">-C</span> Pho.jpg <span class=\"token operator\">|</span> <span class=\"token function\">less</span></pre></td></tr></table></figure><p>python</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TheMessage.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">32</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tres <span class=\"token operator\">+=</span> <span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\tres <span class=\"token operator\">+=</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"binwalk\"><a class=\"anchor\" href=\"#binwalk\">#</a> binwalk</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>binwalk <span class=\"token parameter variable\">--dd</span><span class=\"token operator\">=</span>.* xx.jpeg <span class=\"token comment\"># 查看所有隐藏的二进制，DD 可以顺便解压</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>binwalk <span class=\"token parameter variable\">-e</span> xx.jpg <span class=\"token comment\"># 提取文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">file</span> * <span class=\"token comment\"># 查看当前目录所有文件类型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>exiftool xx.jpg <span class=\"token comment\"># 查看更多信息，有 file 里面没有显示完全的</span></pre></td></tr></table></figure><h4 id=\"stegehide\"><a class=\"anchor\" href=\"#stegehide\">#</a> stegehide</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>steghide extract <span class=\"token parameter variable\">-sf</span> xx.jpg</pre></td></tr></table></figure><h3 id=\"二维码\"><a class=\"anchor\" href=\"#二维码\">#</a> 二维码</h3>\n<p>显示二维码</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> zbar-tools</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>zbarimg xx.png</pre></td></tr></table></figure><p>python</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"qr.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>det <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>QRCodeDetector<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> det<span class=\"token punctuation\">.</span>detectAndDecode<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> python</h2>\n<h3 id=\"string\"><a class=\"anchor\" href=\"#string\">#</a> string</h3>\n<p>所有可打印字符</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string<span class=\"token punctuation\">.</span>printable</pre></td></tr></table></figure><h3 id=\"提取flag\"><a class=\"anchor\" href=\"#提取flag\">#</a> 提取 flag</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">extract_flag_from_string</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">match</span> <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'flag\\&#123;[^&#125;]+&#125;'</span><span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h3 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install pycryptodome</pre></td></tr></table></figure><h4 id=\"计算两个byte的xor\"><a class=\"anchor\" href=\"#计算两个byte的xor\">#</a> 计算两个 byte 的 xor</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">^</span> y <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>y <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"urlencode\"><a class=\"anchor\" href=\"#urlencode\">#</a> urlencode</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>parse</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 字典格式的数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 使用 urlencode 进行编码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>encoded_data <span class=\"token operator\">=</span> urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>urlencode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>encoded_data<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"git\"><a class=\"anchor\" href=\"#git\">#</a> Git</h2>\n<p>查看历史 log</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> log</pre></td></tr></table></figure><p>查看 commit 改变了什么</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> show</pre></td></tr></table></figure><h2 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h2>\n<h4 id=\"解压\"><a class=\"anchor\" href=\"#解压\">#</a> 解压</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unzip</span> x.zip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">unrar</span> x x.rar</pre></td></tr></table></figure><h3 id=\"查看ls\"><a class=\"anchor\" href=\"#查看ls\">#</a> 查看 ls</h3>\n<p>打印所有文件夹内容</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-la</span> *</pre></td></tr></table></figure><p>查找</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> *.txt</pre></td></tr></table></figure><h1 id=\"密码学\"><a class=\"anchor\" href=\"#密码学\">#</a> 密码学</h1>\n<p>online 的工具</p>\n<p><a href=\"https://gchq.github.io/CyberChef/\">https://gchq.github.io/CyberChef/</a></p>\n<p><a href=\"https://www.dcode.fr/en\">https://www.dcode.fr/en</a></p>\n<p>加密</p>\n<p><a href=\"https://www.boxentriq.com/code-breaking/cipher-identifier\">https://www.boxentriq.com/code-breaking/cipher-identifier</a></p>\n<h3 id=\"2进制到hex\"><a class=\"anchor\" href=\"#2进制到hex\">#</a> 2 进制到 hex</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>bc<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h4 id=\"hex转换\"><a class=\"anchor\" href=\"#hex转换\">#</a> hex 转换</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> unhexlify</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexstr <span class=\"token operator\">=</span> <span class=\"token string\">\"41 42 43 54 46 7B 34 35 43 31 31 5F 31 35 5F 55 35 33 46 55 4C 7D\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexs <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>hexstr<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>unhexlify<span class=\"token punctuation\">(</span>hexs<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"输入bytes\"><a class=\"anchor\" href=\"#输入bytes\">#</a> 输入 bytes</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">\"f\\nk\\fw&amp;O.@\\x11x\\rZ;U\\x11p\\x19F\\x1Fv\\\"M\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token function\">bytearray</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"字符串转换字符数组\"><a class=\"anchor\" href=\"#字符串转换字符数组\">#</a> 字符串转换字符数组</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>char_array <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"your_string\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>string <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>char_array<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"交换大小写\"><a class=\"anchor\" href=\"#交换大小写\">#</a> 交换大小写</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"asb\"</span><span class=\"token punctuation\">.</span>swapcase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>c.isalpha()</code> ：判断  <code>c</code>  是否是字母。</p>\n<p><code>c.isupper()</code> ：判断  <code>c</code>  是否是大写字母。</p>\n<p><code>c.islower()</code> ：判断  <code>c</code>  是否是小写字母</p>\n<h3 id=\"base64\"><a class=\"anchor\" href=\"#base64\">#</a> base64</h3>\n<p>shell</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>base64 <span class=\"token parameter variable\">-d</span> xxx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"c3ludCB2ZiA6IGEwX29icWxfczBldHJnX2RlX3BicXI=\"</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>python</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> base64 <span class=\"token keyword\">import</span> decodebytes</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s <span class=\"token operator\">=</span> decodebytes<span class=\"token punctuation\">(</span><span class=\"token string\">\"Q1RGe0ZsYWdneVdhZ2d5UmFnZ3l9\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>cyberchef 的 label 和 jump 可以实现循环解密</p>\n<p>原理：</p>\n<p><strong>将二进制数据转换为 6 位块：</strong></p>\n<ul>\n<li>每个字节有 8 位，3 个字节一共是 24 位。</li>\n<li>将这 24 位拆分为 4 个 6 位的块。</li>\n</ul>\n<p><strong>将 6 位的数据映射到 Base64 字符表：</strong></p>\n<ul>\n<li><code>A-Za-z0-9+/</code></li>\n</ul>\n<p>如果输入数据的字节数不是 3 的倍数，编码过程会用  <code>=</code>  字符进行填充，使输出数据的长度是 4 字节的倍数。</p>\n<p>在后面每次填一个 byte (0) 直到是 3 的倍数，然后 base64 加密，最后把由加入新 0 产生的 A 换成 = 就好了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b64en</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> table<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> table <span class=\"token operator\">==</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        table <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        table <span class=\"token operator\">+=</span> <span class=\"token string\">\"+/\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    lens <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">.</span>from_bytes<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> lens<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> s</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    needed <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        s <span class=\"token operator\">+=</span> <span class=\"token string\">\"00000000\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        needed <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        i <span class=\"token operator\">+=</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>needed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        ans<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>needed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        ans <span class=\"token operator\">+=</span> <span class=\"token string\">\"=\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b64de</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> table<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> table <span class=\"token operator\">==</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        table <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        table <span class=\"token operator\">+=</span> <span class=\"token string\">\"+/\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    needed <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">while</span> s<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        s<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        needed <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>needed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        s <span class=\"token operator\">+=</span> table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        x <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        toa <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">if</span> x<span class=\"token operator\">>></span>j<span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                toa <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">+</span> toa</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                toa <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> toa</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        a <span class=\"token operator\">+=</span> toa</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>needed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            a<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        i <span class=\"token operator\">+=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">return</span> ans</pre></td></tr></table></figure><h4 id=\"dtmf-声调\"><a class=\"anchor\" href=\"#dtmf-声调\">#</a> DTMF 声调</h4>\n<p><a href=\"https://dtmf.netlify.app/\">https://dtmf.netlify.app/</a></p>\n<h2 id=\"不同种类的密码\"><a class=\"anchor\" href=\"#不同种类的密码\">#</a> 不同种类的密码</h2>\n<h4 id=\"vigenere-cipher\"><a class=\"anchor\" href=\"#vigenere-cipher\">#</a> Vigenere Cipher</h4>\n<p>一种凯撒密码</p>\n<p>key 是  <code>OCU</code>  那么第一个字符被移动了 O (14) 次，第二个字符被移动了  <code>C</code>  (2) 次</p>\n<h4 id=\"caesar-cipher\"><a class=\"anchor\" href=\"#caesar-cipher\">#</a> CAESAR Cipher</h4>\n<p>在线暴力破解</p>\n<p><a href=\"https://www.dcode.fr/caesar-cipher\">https://www.dcode.fr/caesar-cipher</a></p>\n<h4 id=\"keyboard-shift\"><a class=\"anchor\" href=\"#keyboard-shift\">#</a> keyboard shift</h4>\n<p><code>BUH'tdy,|Bim5y~Bdt76yQ</code>  长这样，有可能下划线不被解密</p>\n<p><a href=\"https://www.dcode.fr/keyboard-shift-cipher\">https://www.dcode.fr/keyboard-shift-cipher</a></p>\n<h4 id=\"bacon-cipher\"><a class=\"anchor\" href=\"#bacon-cipher\">#</a> bacon cipher</h4>\n<h4 id=\"与佛论禅\"><a class=\"anchor\" href=\"#与佛论禅\">#</a> 与佛论禅</h4>\n<p><a href=\"https://www.keyfc.net/bbs/tools/tudoucode.aspx\">https://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p>\n<p>密语是 <code>佛曰：</code>  开头的</p>\n<h4 id=\"rot13\"><a class=\"anchor\" href=\"#rot13\">#</a> rot13</h4>\n<p><a href=\"https://www.rot13.de/index.php\">https://www.rot13.de/index.php</a></p>\n<h3 id=\"enigma-cryptogarphy\"><a class=\"anchor\" href=\"#enigma-cryptogarphy\">#</a> enigma cryptogarphy</h3>\n<p><a href=\"https://cryptii.com/pipes/enigma-machine\">https://cryptii.com/pipes/enigma-machine</a></p>\n<h4 id=\"playfair-cipher\"><a class=\"anchor\" href=\"#playfair-cipher\">#</a> Playfair cipher</h4>\n<p>通常有一个表格表示密钥</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnalign=\"left left left left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>Q</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>W</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>E</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>T</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>Y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>U</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>I</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>O</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>P</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>A</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>S</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>D</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>F</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>G</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>H</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>K</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>Z</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>X</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>C</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>V</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>N</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>M</mi></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{lllll}\nQ &amp; W &amp; E &amp; R &amp; T \\\\\nY &amp; U &amp; I &amp; O &amp; P \\\\\nA &amp; S &amp; D &amp; F &amp; G \\\\\nH &amp; K &amp; L &amp; Z &amp; X \\\\\nC &amp; V &amp; B &amp; N &amp; M\n\\end{array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6em;vertical-align:-2.75em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-0.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<p><a href=\"https://www.boxentriq.com/code-breaking/playfair-cipher\">https://www.boxentriq.com/code-breaking/playfair-cipher</a></p>\n<h3 id=\"brute-force\"><a class=\"anchor\" href=\"#brute-force\">#</a> brute force</h3>\n<p>暴力 key 的长度，然后暴力，使得 xor 后的 string 有  <code>flag</code></p>\n<h4 id=\"sha1\"><a class=\"anchor\" href=\"#sha1\">#</a> sha1</h4>\n<p>这个里面的  <code>0x8004u</code>  就是 sha1 加密的标志</p>\n<p><a href=\"http://www.ttmd5.com/hash.php?type=5\">http://www.ttmd5.com/hash.php?type=5</a></p>\n<h4 id=\"md5\"><a class=\"anchor\" href=\"#md5\">#</a> Md5</h4>\n<p>这个里面的  <code>0x8003u</code>  就是 sha1 加密的标志</p>\n<p><a href=\"https://hashes.com/en/decrypt/hash\">https://hashes.com/en/decrypt/hash</a></p>\n<p><a href=\"https://md5.gromweb.com/?md5=b74dec4f39d35b6a2e6c48e637c8aedb\">https://md5.gromweb.com/?md5=b74dec4f39d35b6a2e6c48e637c8aedb</a></p>\n<p><a href=\"https://www.somd5.com/\">https://www.somd5.com/</a></p>\n<p>可以直接 google MD5 值，看有没有解密</p>\n<h3 id=\"discrete-logarithm\"><a class=\"anchor\" href=\"#discrete-logarithm\">#</a> Discrete logarithm</h3>\n<p>如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 的质数分解比较小，那么可以解出来</p>\n<p><a href=\"https://github.com/idekctf/idekctf-2024/blob/main/crypto/goldenticket/debug/solve.py\">https://github.com/idekctf/idekctf-2024/blob/main/crypto/goldenticket/debug/solve.py</a></p>\n<p>sage 有一个函数  <code>discrete_log_lambda</code>  可以对一个区间计算答案，复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msqrt><mrow><mi>l</mi><mi>e</mi><mi>n</mi></mrow></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(\\sqrt{len})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1822em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9322em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.8922em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.08em\" viewbox=\"0 0 400000 1080\" preserveaspectratio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1078em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 级别，之后再用 CRT 合并出大答案</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>y</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">PH_partial</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> fact_phi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Returns (x, m), where</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    - x is the dlog of h in base g, mod m</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    - m = lcm(pi^ei) for (pi, ei) in fact_phi</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    mod <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    F <span class=\"token operator\">=</span> GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    phi <span class=\"token operator\">=</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> pi<span class=\"token punctuation\">,</span> ei <span class=\"token keyword\">in</span> fact_phi<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        gi <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> phi<span class=\"token operator\">//</span><span class=\"token punctuation\">(</span>pi<span class=\"token operator\">**</span>ei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        hi <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> phi<span class=\"token operator\">//</span><span class=\"token punctuation\">(</span>pi<span class=\"token operator\">**</span>ei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        xi <span class=\"token operator\">=</span> discrete_log_lambda<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">(</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> F<span class=\"token punctuation\">(</span>gi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bounds <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pi<span class=\"token operator\">**</span>ei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>xi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        mod<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>pi<span class=\"token operator\">**</span>ei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    x<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> CRT<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> mod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lcm<span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> phi<span class=\"token operator\">//</span>m<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> phi<span class=\"token operator\">//</span>m<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> m</pre></td></tr></table></figure><h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h4 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h4>\n<p>从 HTTP 头中的 Server 字段可以了解用了什么服务器</p>\n<p>敏感目录：</p>\n<ul>\n<li><code>.git</code></li>\n<li><code>svn</code></li>\n<li><code>idea</code></li>\n</ul>\n<p>工具</p>\n<ul>\n<li>dirsearch</li>\n<li>ffuf</li>\n</ul>\n<h3 id=\"sql-注入\"><a class=\"anchor\" href=\"#sql-注入\">#</a> SQL 注入</h3>\n<h4 id=\"数字型注入\"><a class=\"anchor\" href=\"#数字型注入\">#</a> 数字型注入</h4>\n<p><code>?id=1</code>  和  <code>?id=2-1</code>  是一样的</p>\n<h2 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> PWN</h2>\n<h4 id=\"pwn-tool\"><a class=\"anchor\" href=\"#pwn-tool\">#</a> pwn tool</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> pwmtools</pre></td></tr></table></figure><h4 id=\"recv\"><a class=\"anchor\" href=\"#recv\">#</a> recv</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>con<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"ready? Y/N : \"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>con<span class=\"token punctuation\">.</span>recvline_startswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"Computer\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 一直到有一个符合的</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>con<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"send\"><a class=\"anchor\" href=\"#send\">#</a> send</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>con<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'Y'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"连接\"><a class=\"anchor\" href=\"#连接\">#</a> 连接</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pwn</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>con <span class=\"token operator\">=</span> pwn<span class=\"token punctuation\">.</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"thekidofarcrania.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10001</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"ready? Y/N : \"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"post-request\"><a class=\"anchor\" href=\"#post-request\">#</a> Post Request</h3>\n<h4 id=\"curl\"><a class=\"anchor\" href=\"#curl\">#</a> curl</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"username=admin&amp;password=71urlkufpsdnlkadsf\"</span> http://165.227.106.113/post.php</pre></td></tr></table></figure><h3 id=\"burpsuite\"><a class=\"anchor\" href=\"#burpsuite\">#</a> Burpsuite</h3>\n<p>install</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> burpsuite</pre></td></tr></table></figure><p>打开之后点 Proxy, 然后点 intercept on, 然后 open browser 打开连接就可以获得对应的请求</p>\n<h4 id=\"header\"><a class=\"anchor\" href=\"#header\">#</a> header</h4>\n<p>可以右键发送到 repeater 里面</p>\n<p>然后在里面改 header</p>\n<h4 id=\"referer\"><a class=\"anchor\" href=\"#referer\">#</a> referer</h4>\n<p>表示从哪里来的</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Referer:awesomesauce.com</pre></td></tr></table></figure><h4 id=\"python插件\"><a class=\"anchor\" href=\"#python插件\">#</a> python 插件</h4>\n<p>Repeater 里面右键，extension，里面可以复制为 python 的 request</p>\n<h3 id=\"开发者工具\"><a class=\"anchor\" href=\"#开发者工具\">#</a> 开发者工具</h3>\n<h4 id=\"storage\"><a class=\"anchor\" href=\"#storage\">#</a> Storage</h4>\n<p>可以看到存储的信息</p>\n<h2 id=\"网站\"><a class=\"anchor\" href=\"#网站\">#</a> 网站</h2>\n<h3 id=\"robotstxt\"><a class=\"anchor\" href=\"#robotstxt\">#</a>  <code>robots.txt</code></h3>\n<p>去网站的 <a href=\"https://ctflearn.com/robots.txt\">https://ctflearn.com/robots.txt</a> 可以看到不允许的网页</p>\n<h4 id=\"wikipedia\"><a class=\"anchor\" href=\"#wikipedia\">#</a> wikipedia</h4>\n<p><a href=\"https://en.wikipedia.org/\">https://en.wikipedia.org/</a></p>\n<p>用 diff 可以看到修改的信息</p>\n<h4 id=\"备份文件名\"><a class=\"anchor\" href=\"#备份文件名\">#</a> 备份文件名</h4>\n<p><code>.git .svn .swp .svn .~ .bak .bash_history</code></p>\n<h3 id=\"dirsearch\"><a class=\"anchor\" href=\"#dirsearch\">#</a> dirsearch</h3>\n<p>可以看网页的目录</p>\n<p><a href=\"https://github.com/maurosoria/dirsearch\">https://github.com/maurosoria/dirsearch</a></p>\n<h4 id=\"更改网页源代码\"><a class=\"anchor\" href=\"#更改网页源代码\">#</a> 更改网页源代码</h4>\n<p>可以把 disable 的按钮改成可以按下去</p>\n<p>用 hackbar 可以发送 post 请求</p>\n<h4 id=\"查找网站的隐藏连接\"><a class=\"anchor\" href=\"#查找网站的隐藏连接\">#</a> 查找网站的隐藏连接</h4>\n<h4 id=\"gobuster\"><a class=\"anchor\" href=\"#gobuster\">#</a> gobuster</h4>\n<h4 id=\"查找历史网页状态\"><a class=\"anchor\" href=\"#查找历史网页状态\">#</a> 查找历史网页状态</h4>\n<p>wayback machinehttps://web.archive.org/</p>\n<h2 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h2>\n<h4 id=\"判断相等\"><a class=\"anchor\" href=\"#判断相等\">#</a> 判断相等</h4>\n<p><code>==, &gt;</code>  是弱类型判断，会先转换类型再判断，所以  <code>a=123abc</code>  会变成  <code>123</code></p>\n<h4 id=\"反序列化\"><a class=\"anchor\" href=\"#反序列化\">#</a> 反序列化</h4>\n<p>序列化：把对象转成字符串存储。反序列化：把字符串转成对象</p>\n<p><code>__wakeup()</code>  是在序列化的时候执行的</p>\n<pre><code class=\"language-php+HTML\">&lt;?php \nclass xctf&#123;\npublic $flag = '111';\npublic function __wakeup()&#123;\nexit('bad requests');\n&#125;\n&#125;\n$a = new xctf();\n$c = serialize($a);\necho $c\n?&gt; \n</code></pre>\n<p>输出是  <code>O:4:&quot;xctf&quot;:1:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;</code>  现在要绕过这个 exit 方法，改成 2 就行</p>\n<h4 id=\"think-php-rce\"><a class=\"anchor\" href=\"#think-php-rce\">#</a> THINK PHP RCE</h4>\n<p>RCE 是 remote code execution，在 github 上搜索 think php5 可以找到漏洞</p>\n<h3 id=\"文件上传\"><a class=\"anchor\" href=\"#文件上传\">#</a> 文件上传</h3>\n<p><a href=\"https://www.cnblogs.com/xhds/p/12218471.html\">https://www.cnblogs.com/xhds/p/12218471.html</a></p>\n<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> misc</h1>\n<h4 id=\"在线工具\"><a class=\"anchor\" href=\"#在线工具\">#</a> 在线工具</h4>\n<p><a href=\"https://www.ilovepdf.com/zh-cn\">https://www.ilovepdf.com/zh-cn</a> , <a href=\"https://pdf2doc.com/\">https://pdf2doc.com/</a> PDF 转换</p>\n<p><a href=\"https://georgeom.net/StegOnline/checklist\">https://georgeom.net/StegOnline/checklist</a> checklist steg</p>\n<h3 id=\"隐写术\"><a class=\"anchor\" href=\"#隐写术\">#</a> 隐写术</h3>\n<h4 id=\"文件附加\"><a class=\"anchor\" href=\"#文件附加\">#</a> 文件附加</h4>\n<h4 id=\"png\"><a class=\"anchor\" href=\"#png\">#</a> PNG</h4>\n<p>开头是</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>89 50 4E 47 0D 0A 1A 0A</pre></td></tr></table></figure><p>IEND 是</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>t</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>00 00 00 00 49 45 4E AE 42 60 82</pre></td></tr></table></figure><p>查看 metadata 在 linux 上:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>exiftool xxx.png</pre></td></tr></table></figure><h4 id=\"jpeg\"><a class=\"anchor\" href=\"#jpeg\">#</a> JPEG</h4>\n<ul>\n<li>头  <code>FF D8 FF</code></li>\n<li>尾  <code>FF D9</code></li>\n</ul>\n<h4 id=\"gif\"><a class=\"anchor\" href=\"#gif\">#</a> GIF</h4>\n<p>拆分图片工具：stegsolve 分离图片（先 open 再 analyse-frame browser）</p>\n<ul>\n<li><code>47 49 46 38</code></li>\n<li><code>00 3B</code></li>\n</ul>\n<h4 id=\"zip\"><a class=\"anchor\" href=\"#zip\">#</a> ZIP</h4>\n<ul>\n<li><code>50 4B 03 04</code></li>\n<li><code>50 4B</code></li>\n</ul>\n<h4 id=\"rar\"><a class=\"anchor\" href=\"#rar\">#</a> RAR</h4>\n<ul>\n<li><code>52 61 72 21</code></li>\n</ul>\n<h4 id=\"wave\"><a class=\"anchor\" href=\"#wave\">#</a> WAVE</h4>\n<ul>\n<li><code>57 41 56 45</code></li>\n</ul>\n<h4 id=\"avi\"><a class=\"anchor\" href=\"#avi\">#</a> AVI</h4>\n<ul>\n<li><code>41 56 49 20</code></li>\n</ul>\n<h3 id=\"lsb\"><a class=\"anchor\" href=\"#lsb\">#</a> LSB</h3>\n<p>Least significant bit 在图片的最低有效位上写入信息</p>\n<p>Stegsolve , zsteg 工具可以识别</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> zsteg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>zsteg cats.png</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>zsteg xx.bmp <span class=\"token parameter variable\">-b</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">-a</span> yx <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><p>python 脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> bitarray <span class=\"token keyword\">import</span> bitarray</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">LSBtoBytes</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># index 0,1,2 = r,g,b</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    im <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> im<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> row<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> bitarray<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tobytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">LSBtoImg</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    im <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>row <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>im<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> j<span class=\"token punctuation\">,</span>col <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> col<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                im<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                im<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># cv2.imwrite(\"out.png\",im)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> im</pre></td></tr></table></figure><p>LSB 可能 RG， GB 之类的组合使用</p>\n<h4 id=\"隐写思路\"><a class=\"anchor\" href=\"#隐写思路\">#</a> 隐写思路</h4>\n<ul>\n<li>\n<p>图片结构改变： 结尾加东西， <code>zsteg</code></p>\n<p>提取文件：  <code>zsteg -e &quot;b1,rgb,lsb,xy&quot; xx.png &gt; flag.png</code></p>\n<p>Chunks 改变：用  <code>pngcheck</code>  检查</p>\n</li>\n<li>\n<p>LSB 隐写： 对应工具</p>\n</li>\n</ul>\n<h3 id=\"盲水印\"><a class=\"anchor\" href=\"#盲水印\">#</a> 盲水印</h3>\n<p>在不同与域上隐藏信息，在图片傅里叶变换后。把信息添加到 “噪声” 中，再逆变换回去就不会对原图片产生大变化</p>\n<p>工具:  <code>BlindWaterMark</code></p>\n<h4 id=\"现成的隐写工具\"><a class=\"anchor\" href=\"#现成的隐写工具\">#</a> 现成的隐写工具</h4>\n<ul>\n<li>\n<p>Jphide: JPG</p>\n</li>\n<li>\n<p>Outguess: JPG</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>outguess <span class=\"token parameter variable\">-k</span> <span class=\"token string\">\"key\"</span> <span class=\"token parameter variable\">-r</span> file.jpg out.txt <span class=\"token comment\"># decode</span></pre></td></tr></table></figure></li>\n<li>\n<p>Steghide: support for JPEG, BMP, WAV and AU files</p>\n</li>\n<li>\n<p>F5-steganography: BMP, GIF, or JPEG</p>\n</li>\n<li>\n<p>invisible secrets</p>\n</li>\n<li>\n<p>wbs43open</p>\n</li>\n<li>\n<p>stegosuite</p>\n</li>\n<li>\n<p>cloacked-pixel</p>\n</li>\n<li>\n<p>Slient-Eye</p>\n</li>\n</ul>\n<p>暴力工具</p>\n<p><code>DominicBreuker/stego-toolkit</code></p>\n<h3 id=\"压缩文件\"><a class=\"anchor\" href=\"#压缩文件\">#</a> 压缩文件</h3>\n<h4 id=\"zip-文件\"><a class=\"anchor\" href=\"#zip-文件\">#</a> ZIP 文件</h4>\n<ul>\n<li>数据区 (504B0304)\n<ul>\n<li>解压要的版本</li>\n<li>flags</li>\n<li>压缩算法</li>\n<li>文件修改时间</li>\n<li>CRC32</li>\n<li>压缩前与后大小</li>\n<li>文件名长度和内容</li>\n<li>文件数据</li>\n</ul>\n</li>\n<li>核心目录区 (504B0102)</li>\n<li>核心目录结束区 (504B0506)</li>\n</ul>\n<h4 id=\"pdf-文件\"><a class=\"anchor\" href=\"#pdf-文件\">#</a> PDF 文件</h4>\n<p>可能藏在图片后面，转 word 或者全选可以看</p>\n<h4 id=\"rar-文件\"><a class=\"anchor\" href=\"#rar-文件\">#</a> RAR 文件</h4>\n<p><code>RAR &lt;=4</code>  的签名  <code>5261172211A0700</code></p>\n<p><code>RAR5</code>  的签名  <code>526172211A070100</code></p>\n<h4 id=\"暴力破解工具\"><a class=\"anchor\" href=\"#暴力破解工具\">#</a> 暴力破解工具</h4>\n<p>windows: ARCHPR</p>\n<p>Linux: fcrackzip, RarCrack</p>\n<p>也可以通过爆破 CRC32 来获得</p>\n<p><code>zip-crc-cracker</code>  ， <code>crc32</code></p>\n<h4 id=\"伪加密\"><a class=\"anchor\" href=\"#伪加密\">#</a> 伪加密</h4>\n<p>ZIP 里面有个通用标记位</p>\n<p>距离  <code>504B0102</code>  偏移 8 byte, 本身占 2 byte，最低位标识是否被加密。只要改回 0 就可以正常打开</p>\n<p>RAR 里面也有</p>\n<p>HeadFlags 从低位起第 3bit 是，但是要重新计算 CRC ( <code>HEAD_CRC</code> )</p>\n<h4 id=\"zip-明文攻击\"><a class=\"anchor\" href=\"#zip-明文攻击\">#</a> ZIP 明文攻击</h4>\n<p>知道内容一些字节可以用，要先确认把呢不能</p>\n<p>可以用  <code>ARCHPR</code>  , 非完整明文  <code>bkcrack</code></p>\n<h3 id=\"音频隐写\"><a class=\"anchor\" href=\"#音频隐写\">#</a> 音频隐写</h3>\n<h4 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具</h4>\n<ul>\n<li>audacity 查看音频</li>\n</ul>\n<h3 id=\"流量分析\"><a class=\"anchor\" href=\"#流量分析\">#</a> 流量分析</h3>\n<p>Wireshark</p>\n<p>统计里面，协议分级可以看流量包的比例</p>\n<p>会话里面会有地址</p>\n<p>过滤器</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ip.src <span class=\"token operator\">==</span> xxx.xx.xx.xx</pre></td></tr></table></figure><p>也可以右键作为过滤器应用</p>\n<h4 id=\"http\"><a class=\"anchor\" href=\"#http\">#</a> HTTP</h4>\n<p>明文传输的</p>\n<h4 id=\"https\"><a class=\"anchor\" href=\"#https\">#</a> HTTPS</h4>\n<p>添加 TLS，要导入密钥才能看到内容</p>\n<h4 id=\"ftp\"><a class=\"anchor\" href=\"#ftp\">#</a> FTP</h4>\n<p>20，21 端口</p>\n<h4 id=\"dns\"><a class=\"anchor\" href=\"#dns\">#</a> DNS</h4>\n<p>解析网址</p>\n<h3 id=\"usb流量分析\"><a class=\"anchor\" href=\"#usb流量分析\">#</a> USB 流量分析</h3>\n<p>通过 USB 协议传输，从一个地址发送到 host</p>\n<p>键盘是 8 字节，鼠标是 4 字节</p>\n<ul>\n<li>第一个字节是按键按下\n<ul>\n<li><code>00</code>  没有按下， <code>01</code>  按左键， <code>02</code>  按右键</li>\n</ul>\n</li>\n<li>第二个字节是左右偏移\n<ul>\n<li>正是向右移动  <code>n</code>  个像素位</li>\n</ul>\n</li>\n<li>第三个字节是上下偏移\n<ul>\n<li>正是向上移动</li>\n</ul>\n</li>\n</ul>\n<p>键盘流量</p>\n<ul>\n<li>Byte1：控制信息\n<ul>\n<li><code>[Right gui,Right alt,Right shift,Right control,Left Gui,Left Alt,left shift,Left Control]</code></li>\n</ul>\n</li>\n<li>byte3：击键信息</li>\n</ul>\n<h3 id=\"wireshark\"><a class=\"anchor\" href=\"#wireshark\">#</a> wireshark</h3>\n<p>提取流量数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pyshark</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pyshark<span class=\"token punctuation\">.</span>packet</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> unhexlify</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>capture <span class=\"token operator\">=</span> pyshark<span class=\"token punctuation\">.</span>FileCapture<span class=\"token punctuation\">(</span><span class=\"token string\">'justapcap.pcap'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>hexstr <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> packet <span class=\"token keyword\">in</span> capture<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    cur <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"1m \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    hexstr <span class=\"token operator\">+=</span> cur</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>hexstr <span class=\"token operator\">=</span> hexstr<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"exam\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a.png\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>unhexlify<span class=\"token punctuation\">(</span>hexstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"内存取证\"><a class=\"anchor\" href=\"#内存取证\">#</a> 内存取证</h3>\n<h4 id=\"volatility\"><a class=\"anchor\" href=\"#volatility\">#</a> volatility</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> volatility-phocean</pre></td></tr></table></figure><h4 id=\"确定信息\"><a class=\"anchor\" href=\"#确定信息\">#</a> 确定信息</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol.py <span class=\"token parameter variable\">-f</span> memory imageinfo</pre></td></tr></table></figure><p>psxview 查看内存</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol.py <span class=\"token parameter variable\">-f</span> memory <span class=\"token parameter variable\">--profile</span><span class=\"token operator\">=</span>Win7SPx86 psxview</pre></td></tr></table></figure><p>pslist 查看运行的进程</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>volatility <span class=\"token parameter variable\">-f</span> mem.mem <span class=\"token parameter variable\">--profile</span><span class=\"token operator\">=</span>Win10x64_1231 pslist</pre></td></tr></table></figure><p>filescan 是打开的文件对象</p>\n<p>dumpfile</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol.py <span class=\"token parameter variable\">-f</span> memory <span class=\"token parameter variable\">--profile</span><span class=\"token operator\">=</span>Win7SPx86 prodump <span class=\"token parameter variable\">-p</span> <span class=\"token number\">1384</span> --dump-dir ./dump/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">file</span> dump/executable.i384.exe</pre></td></tr></table></figure><p>PEB 会保存 PEB 信息</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol.py <span class=\"token parameter variable\">-f</span> memory <span class=\"token parameter variable\">--profile</span><span class=\"token operator\">=</span>Win7SPx86 cmdline</pre></td></tr></table></figure><p>是命令行信息</p>\n<p>sockets</p>\n<p>hivelist, hivescan 是注册表</p>\n<p>hashdump 获取用户密码的 hash， mimikatz 插件可以还原 hash</p>\n<h4 id=\"volatitlity-3\"><a class=\"anchor\" href=\"#volatitlity-3\">#</a> volatitlity 3</h4>\n<p>确定信息</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vol <span class=\"token parameter variable\">-f</span> x.mem windows.info</pre></td></tr></table></figure><h3 id=\"磁盘取证\"><a class=\"anchor\" href=\"#磁盘取证\">#</a> 磁盘取证</h3>\n<h4 id=\"文件系统\"><a class=\"anchor\" href=\"#文件系统\">#</a> 文件系统</h4>\n<p>windows: FAT16, FAT32, NTFS</p>\n<p>Linux: Ext2, Ext3, Ext4</p>\n<h4 id=\"fat1632\"><a class=\"anchor\" href=\"#fat1632\">#</a> Fat16/32</h4>\n<p>16bit 来表示一个簇</p>\n<p>DBR 扇区</p>\n<p><img src=\"/CTF%E7%9F%A5%E8%AF%86%E7%82%B9/image-20240819191436093.png\" alt=\"image-20240819191436093\"></p>\n<h4 id=\"ntfs\"><a class=\"anchor\" href=\"#ntfs\">#</a> NTFS</h4>\n<p>性能优秀，安全性高，可恢复性，文件压缩</p>\n<h1 id=\"osint\"><a class=\"anchor\" href=\"#osint\">#</a> OSINT</h1>\n<p>时光机 web archive</p>\n<h1 id=\"区块链blockchain\"><a class=\"anchor\" href=\"#区块链blockchain\">#</a> 区块链 blockchain</h1>\n<p>IDE：REMIX</p>\n<h4 id=\"windows-安装nc\"><a class=\"anchor\" href=\"#windows-安装nc\">#</a> windows 安装 nc</h4>\n<p>去 nmap 官网下载就行</p>\n<h3 id=\"msgsender\"><a class=\"anchor\" href=\"#msgsender\">#</a> msg.sender</h3>\n<p>当一个外部账户（例如，用户的钱包地址）调用合约中的函数时， <code>msg.sender</code>  会是该外部账户的地址。</p>\n<p>如果一个合约调用另一个合约的函数，那么  <code>msg.sender</code>  将是调用方合约的地址，而不是最终的外部账户。</p>\n<p>例如，如果合约 A 调用合约 B 的函数，合约 B 中的  <code>msg.sender</code>  会是合约 A 的地址，而不是最初发起调用的外部账户。</p>\n<p>当一个函数从合约内部调用另一个合约的函数时， <code>msg.sender</code>  仍然是直接发起调用的那个地址。如果函数调用链中有多个合约调用， <code>msg.sender</code>  始终代表的是当前执行上下文中的调用者。</p>\n<h3 id=\"storage-2\"><a class=\"anchor\" href=\"#storage-2\">#</a> storage</h3>\n<p>在 Solidity 中， <code>storage</code>  是用于存储智能合约中状态变量的数据位置。它是智能合约中非常重要的一部分，用来持久化存储数据，也就是存储在以太坊区块链上的数据。与其他数据存储位置（如  <code>memory</code>  和  <code>stack</code> ）不同， <code>storage</code>  中的数据是持久的，意味着它们在交易执行后会一直存在，直到被更新或删除。每个合约都有自己的  <code>storage</code>  空间。</p>\n<h4 id=\"1-storage-的特点\"><a class=\"anchor\" href=\"#1-storage-的特点\">#</a> 1. <strong> <code>storage</code>  的特点</strong></h4>\n<ul>\n<li><strong>持久性</strong>： <code>storage</code>  中的数据在合约的生命周期内是持久的，意味着它们会被保存在区块链中。即使合约函数执行完成后，数据仍然保留，并且在下一次函数调用时可以访问。</li>\n<li><strong>费用</strong>：在 Solidity 中，将数据写入  <code>storage</code>  是昂贵的操作，因为这需要改变区块链状态并消耗  <code>gas</code> 。相对而言，从  <code>storage</code>  中读取数据的费用要比写入便宜一些。</li>\n<li><strong>每个合约的  <code>storage</code>  空间独立</strong>：每个智能合约都有自己的  <code>storage</code>  空间，且  <code>storage</code>  中的数据可以通过合约的状态变量来访问</li>\n</ul>\n<h4 id=\"slot\"><a class=\"anchor\" href=\"#slot\">#</a> slot</h4>\n<p>Solidity 会将每个状态变量存储在固定的槽（slot）中。每个状态变量占据一定的存储槽，状态变量的存储位置由其在合约中声明的顺序决定。这些槽位在区块链上是固定的</p>\n<h3 id=\"合约交互python\"><a class=\"anchor\" href=\"#合约交互python\">#</a> 合约交互 python</h3>\n<p>先要安装 solc, 然后 pip 安装 <code>web3</code> , <code>py-solc-x</code>  下面是基本配置</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>w3 <span class=\"token operator\">=</span> Web3<span class=\"token punctuation\">(</span>Web3<span class=\"token punctuation\">.</span>HTTPProvider<span class=\"token punctuation\">(</span><span class=\"token string\">'http://94.237.59.45:52415'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_abi</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    temp_file <span class=\"token operator\">=</span> solcx<span class=\"token punctuation\">.</span>compile_files<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.sol'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    abi <span class=\"token operator\">=</span> temp_file<span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.sol:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abi'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> abi</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>setup_abi <span class=\"token operator\">=</span> create_abi<span class=\"token punctuation\">(</span><span class=\"token string\">'Setup'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fNFT_abi <span class=\"token operator\">=</span> create_abi<span class=\"token punctuation\">(</span><span class=\"token string\">'FrontierNFT'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fMarket_abi <span class=\"token operator\">=</span> create_abi<span class=\"token punctuation\">(</span><span class=\"token string\">'FrontierMarketplace'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> w3<span class=\"token punctuation\">.</span>is_connected<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connected to Ethereum network\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to connect\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>private_key <span class=\"token operator\">=</span> <span class=\"token string\">\"1249bb2c45202146bbe401b6b29848c5f0345e418434eeedaade8dd8bdbb437a\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>my_address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x41b34Fe0b213FF5300D648F875F84B0F016295cc\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>fmarket_address <span class=\"token operator\">=</span> <span class=\"token string\">\"0x899c356B0489472c99EF4A46b3893B62Fd73F349\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>setup_address <span class=\"token operator\">=</span> <span class=\"token string\">\"0xD984cF86bfEbb01E62f0729c2Dd5562a852038f4\"</span></pre></td></tr></table></figure><h4 id=\"调用函数\"><a class=\"anchor\" href=\"#调用函数\">#</a> 调用函数</h4>\n<p>不创建新节点</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setup <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>contract<span class=\"token punctuation\">(</span>address<span class=\"token operator\">=</span>setup_address<span class=\"token punctuation\">,</span> abi<span class=\"token operator\">=</span>setup_abi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>setup<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>isSolved<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>setup<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>paramfunc<span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 有参数的写法</span></pre></td></tr></table></figure><p>读取值，可以把值当成函数</p>\n<h4 id=\"查询block-chain\"><a class=\"anchor\" href=\"#查询block-chain\">#</a> 查询 block chain</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>latest_block <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_block<span class=\"token punctuation\">(</span><span class=\"token string\">'latest'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># block_number = 10000000  #</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># latest_block = w3.eth.get_block(0)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># print(block['number']) </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Latest Block Info:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Block Number: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Block Hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'hash'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Parent Hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'parentHash'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Timestamp: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Miner: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'miner'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Gas Used: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'gasUsed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Gas Limit: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'gasLimit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Transactions Count: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'transactions'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h5 id=\"查询balance\"><a class=\"anchor\" href=\"#查询balance\">#</a> 查询 balance</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询该地址的余额（返回值是以 wei 为单位）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>balance_wei <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_balance<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 将 wei 转换为 ether</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>balance_ether <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>from_wei<span class=\"token punctuation\">(</span>balance_wei<span class=\"token punctuation\">,</span> <span class=\"token string\">'ether'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"查询transactions\"><a class=\"anchor\" href=\"#查询transactions\">#</a> 查询 transactions</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询某个区块范围内的交易</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>block_start <span class=\"token operator\">=</span> <span class=\"token number\">10000000</span>  <span class=\"token comment\"># 起始区块</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>block_end <span class=\"token operator\">=</span> <span class=\"token number\">10001000</span>    <span class=\"token comment\"># 结束区块</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 获取区块范围内的交易</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> block_number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>block_start<span class=\"token punctuation\">,</span> block_end <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    block <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getBlock<span class=\"token punctuation\">(</span>block_number<span class=\"token punctuation\">,</span> full_transactions<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\"># 遍历区块中的所有交易</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> tx <span class=\"token keyword\">in</span> block<span class=\"token punctuation\">.</span>transactions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 如果交易是发送到合约地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> tx<span class=\"token punctuation\">.</span>to <span class=\"token operator\">==</span> contract_address<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\"># 解析交易的 input 数据，检查是否是函数调用</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            input_data <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span><span class=\"token builtin\">input</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Transaction Hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx<span class=\"token punctuation\">.</span><span class=\"token builtin\">hash</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\"># 使用 ABI 来解码交易数据</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            decoded_input <span class=\"token operator\">=</span> contract<span class=\"token punctuation\">.</span>decode_function_input<span class=\"token punctuation\">(</span>input_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            function_name <span class=\"token operator\">=</span> decoded_input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span>__name__</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Called function: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>function_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Function Arguments: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>decoded_input<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 遍历</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> tx_hash <span class=\"token keyword\">in</span> latest_block<span class=\"token punctuation\">[</span><span class=\"token string\">'transactions'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    tx <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_transaction<span class=\"token punctuation\">(</span>tx_hash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"from: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx<span class=\"token punctuation\">[</span><span class=\"token string\">'from'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> tx<span class=\"token punctuation\">[</span><span class=\"token string\">'to'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Transaction </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx_hash<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is a contract deployment.\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Transaction </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx_hash<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is a contract function call to </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx<span class=\"token punctuation\">[</span><span class=\"token string\">'to'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    receipt <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_transaction_receipt<span class=\"token punctuation\">(</span>tx_hash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> receipt<span class=\"token punctuation\">[</span><span class=\"token string\">'contractAddress'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Contract deployed at address </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>receipt<span class=\"token punctuation\">[</span><span class=\"token string\">'contractAddress'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No contract deployed in this transaction.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># print(f\"Transaction Input Data: &#123;tx['input']&#125;\")</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># decoded_input = setup.decode_function_input(tx['input'])</span></pre></td></tr></table></figure><h5 id=\"交易信息\"><a class=\"anchor\" href=\"#交易信息\">#</a> 交易信息</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 打印交易的详细信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> tx_hash <span class=\"token keyword\">in</span> transactions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    transaction <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_transaction<span class=\"token punctuation\">(</span>tx_hash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Transaction Hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>tx_hash<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"From: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>transaction<span class=\"token punctuation\">[</span><span class=\"token string\">'from'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"To: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>transaction<span class=\"token punctuation\">[</span><span class=\"token string\">'to'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Value: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>web3<span class=\"token punctuation\">.</span>fromWei<span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ether'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ETH\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Gas: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>transaction<span class=\"token punctuation\">[</span><span class=\"token string\">'gas'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Gas Price: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>web3<span class=\"token punctuation\">.</span>fromWei<span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">[</span><span class=\"token string\">'gasPrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gwei'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Gwei\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"查询事件\"><a class=\"anchor\" href=\"#查询事件\">#</a> 查询事件</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>event_filter <span class=\"token operator\">=</span> setup<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span>DeployedTarget<span class=\"token punctuation\">.</span>create_filter<span class=\"token punctuation\">(</span>from_block<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> to_block<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#DeployedTarget 是函数名字</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>events <span class=\"token operator\">=</span> event_filter<span class=\"token punctuation\">.</span>get_all_entries<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># print event</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> events<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Event: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Arguments: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"发送transaction\"><a class=\"anchor\" href=\"#发送transaction\">#</a> 发送 transaction</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># send transactions</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tx <span class=\"token operator\">=</span> forgotten<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>discover<span class=\"token punctuation\">(</span>hashed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>build_transaction<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'from'</span><span class=\"token punctuation\">:</span> my_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">\"gasPrice\"</span><span class=\"token punctuation\">:</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>gas_price<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># two ******* hours it took to figure out this was needed.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'nonce'</span><span class=\"token punctuation\">:</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>get_transaction_count<span class=\"token punctuation\">(</span><span class=\"token string\">\"0xEB4B81DE5738a22d24631ABD62f62cEECC268e71\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># needs to be signed as we are executing/writing not just reading</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>tx_create <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>account<span class=\"token punctuation\">.</span>sign_transaction<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> private_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>tx_hash <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>send_raw_transaction<span class=\"token punctuation\">(</span>tx_create<span class=\"token punctuation\">.</span>raw_transaction<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>tx_receipt <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>wait_for_transaction_receipt<span class=\"token punctuation\">(</span>tx_hash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Tx successful with hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span> tx_receipt<span class=\"token punctuation\">.</span>transactionHash<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"计算keccak哈希\"><a class=\"anchor\" href=\"#计算keccak哈希\">#</a> 计算 keccak 哈希</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hashed <span class=\"token operator\">=</span> w3<span class=\"token punctuation\">.</span>solidity_keccak<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">'uint256'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'uint256'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1734258030</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0x3E698Aba19B29C3fB625966A9631e6cf5C79505e\"</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Keccak256 Hash: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>hashed<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hack-思维\"><a class=\"anchor\" href=\"#hack-思维\">#</a> Hack 思维</h2>\n<h3 id=\"数据范围\"><a class=\"anchor\" href=\"#数据范围\">#</a> 数据范围</h3>\n<p>输入不合法数据范围</p>\n",
            "tags": []
        }
    ]
}